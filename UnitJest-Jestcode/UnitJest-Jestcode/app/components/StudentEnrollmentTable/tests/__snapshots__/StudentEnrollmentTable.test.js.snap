// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<StudentEnrollmentTable /> Expect it handles weird data at row 0, column 0 1`] = `
<StudentEnrollmentTable
  footers={
    Array [
      "footer",
      1,
      2,
      3,
    ]
  }
  gridList={
    Array [
      Array [
        Object {},
        Object {
          "id": "CDX_CI",
          "label": "CDX CI",
        },
        Object {
          "id": "CDX_CII",
          "label": "CDX CII",
        },
        Object {
          "id": "CDX_CIII",
          "label": "CDX CIII",
        },
      ],
      Array [
        "teacher-001",
        true,
        true,
        true,
      ],
      Array [
        "teacher-002",
        false,
        false,
        false,
      ],
    ]
  }
  handleStudentViewToggle={[Function]}
  handleTabIsolate={[Function]}
  handleTabReset={[Function]}
  handleToggle={[Function]}
  headers={
    Array [
      "header",
      "CDX_CI",
      "CDX_CII",
      "CDX_CIII",
    ]
  }
  isDataInitialized={false}
  isDataLoading={false}
  isolateTab={false}
  paginationData={
    Object {
      "itemCount": 0,
    }
  }
  smartBarSelections={
    Immutable.Map {
      selectedCohType: "DistrictAdmin",
    }
  }
  studentEnrollRequest={[Function]}
  studentEnrollSaveRequest={[Function]}
  studentViewEnrollSaveRequest={[Function]}
>
  <div>
    <div
      className="teacher-enrollment "
    >
      <div
        className="teacher-enrollment-header"
      >
        Use the check boxes to enroll or unenroll students in HMH programs. Use the check box at the top of each column to enroll all students in that program.
      </div>
      <ScrollSync>
        <div
          className="teacher-enrollment__grid"
        >
          <div
            className="teacher-enrollment__grid-body"
            onChange={[Function]}
          >
            <SAMGrid
              cellRenderer={[Function]}
              className="teacher-enrollment__grid"
              columnCount={5}
              columnWidth={120}
              fixedColumnCount={1}
              fixedRowCount={1}
              footers={
                Array [
                  "footer",
                  1,
                  2,
                  3,
                ]
              }
              gridList={
                Array [
                  Array [
                    Object {},
                    Object {
                      "id": "CDX_CI",
                      "label": "CDX CI",
                    },
                    Object {
                      "id": "CDX_CII",
                      "label": "CDX CII",
                    },
                    Object {
                      "id": "CDX_CIII",
                      "label": "CDX CIII",
                    },
                  ],
                  Array [
                    "teacher-001",
                    true,
                    true,
                    true,
                  ],
                  Array [
                    "teacher-002",
                    false,
                    false,
                    false,
                  ],
                ]
              }
              handleStudentViewToggle={[Function]}
              handleTabIsolate={[Function]}
              handleTabReset={[Function]}
              handleToggle={[Function]}
              headers={
                Array [
                  "header",
                  "CDX_CI",
                  "CDX_CII",
                  "CDX_CIII",
                ]
              }
              height={300}
              isDataInitialized={false}
              isDataLoading={false}
              isolateTab={false}
              key="data-pg-1"
              paginationData={
                Object {
                  "itemCount": 0,
                }
              }
              rowCount={3}
              rowHeight={[Function]}
              rowWidth={100}
              scrollLeft={0}
              smartBarSelections={
                Immutable.Map {
                  selectedCohType: "DistrictAdmin",
                }
              }
              studentEnrollRequest={[Function]}
              studentEnrollSaveRequest={[Function]}
              studentViewEnrollSaveRequest={[Function]}
              width={740}
            >
              <MultiGrid
                cellRenderer={[Function]}
                className="teacher-enrollment__grid"
                classNameBottomLeftGrid=""
                classNameBottomRightGrid=""
                classNameTopLeftGrid=""
                classNameTopRightGrid=""
                columnCount={5}
                columnWidth={120}
                enableFixedColumnScroll={false}
                enableFixedRowScroll={false}
                fixedColumnCount={1}
                fixedRowCount={1}
                footers={
                  Array [
                    "footer",
                    1,
                    2,
                    3,
                  ]
                }
                gridList={
                  Array [
                    Array [
                      Object {},
                      Object {
                        "id": "CDX_CI",
                        "label": "CDX CI",
                      },
                      Object {
                        "id": "CDX_CII",
                        "label": "CDX CII",
                      },
                      Object {
                        "id": "CDX_CIII",
                        "label": "CDX CIII",
                      },
                    ],
                    Array [
                      "teacher-001",
                      true,
                      true,
                      true,
                    ],
                    Array [
                      "teacher-002",
                      false,
                      false,
                      false,
                    ],
                  ]
                }
                handleStudentViewToggle={[Function]}
                handleTabIsolate={[Function]}
                handleTabReset={[Function]}
                handleToggle={[Function]}
                headers={
                  Array [
                    "header",
                    "CDX_CI",
                    "CDX_CII",
                    "CDX_CIII",
                  ]
                }
                height={300}
                isDataInitialized={false}
                isDataLoading={false}
                isolateTab={false}
                paginationData={
                  Object {
                    "itemCount": 0,
                  }
                }
                rowCount={3}
                rowHeight={[Function]}
                rowWidth={100}
                scrollLeft={0}
                scrollToColumn={-1}
                scrollToRow={-1}
                smartBarSelections={
                  Immutable.Map {
                    selectedCohType: "DistrictAdmin",
                  }
                }
                studentEnrollRequest={[Function]}
                studentEnrollSaveRequest={[Function]}
                studentViewEnrollSaveRequest={[Function]}
                style={Object {}}
                styleBottomLeftGrid={Object {}}
                styleBottomRightGrid={Object {}}
                styleTopLeftGrid={Object {}}
                styleTopRightGrid={Object {}}
                width={740}
              >
                <div
                  style={
                    Object {
                      "height": 300,
                      "overflow": "visible",
                      "width": 740,
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "height": 70,
                        "position": "relative",
                        "width": 740,
                      }
                    }
                  >
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={1}
                      columnWidth={120}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            Object {},
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={70}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={120}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 70,
                            "left": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "top": 0,
                            "width": 120,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 70,
                              "maxHeight": 70,
                              "maxWidth": 120,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 120,
                            }
                          }
                        />
                      </div>
                    </Grid>
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={4}
                      columnWidth={[Function]}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            Object {},
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={70}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollLeft={0}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 120,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={620}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 70,
                            "left": 120,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "top": 0,
                            "width": 620,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 70,
                              "maxHeight": 70,
                              "maxWidth": 480,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 480,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-0"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CI
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={1}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-1"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 120,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CII
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={2}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-2"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 240,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CIII
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={3}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-3"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 360,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span />
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={4}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </div>
                  <div
                    style={
                      Object {
                        "height": 230,
                        "overflow": "visible",
                        "position": "relative",
                        "width": 740,
                      }
                    }
                  >
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={1}
                      columnWidth={120}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            Object {},
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={230}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollTop={0}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={120}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 230,
                            "left": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "width": 120,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 40,
                              "maxHeight": 40,
                              "maxWidth": 120,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 120,
                            }
                          }
                        />
                      </div>
                    </Grid>
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={4}
                      columnWidth={[Function]}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            Object {},
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={230}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollLeft={0}
                      scrollToAlignment="auto"
                      scrollToColumn={-2}
                      scrollToRow={-2}
                      scrollTop={0}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 120,
                          "position": "absolute",
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={0}
                      width={620}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 230,
                            "left": 120,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "width": 620,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 40,
                              "maxHeight": 40,
                              "maxWidth": 480,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 480,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={1}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-1"
                            style={
                              Object {
                                "height": 20,
                                "left": 120,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={2}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-2"
                            style={
                              Object {
                                "height": 20,
                                "left": 240,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={3}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-3"
                            style={
                              Object {
                                "height": 20,
                                "left": 360,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={4}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={1}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-1"
                            style={
                              Object {
                                "height": 20,
                                "left": 120,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={2}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-2"
                            style={
                              Object {
                                "height": 20,
                                "left": 240,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={3}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-3"
                            style={
                              Object {
                                "height": 20,
                                "left": 360,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={4}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </div>
                </div>
              </MultiGrid>
            </SAMGrid>
          </div>
          <SAMGrid
            cellRenderer={[Function]}
            className="teacher-enrollment__grid-footer"
            columnCount={4}
            columnWidth={120}
            fixedColumnCount={1}
            fixedRowCount={0}
            footers={
              Array [
                "footer",
                1,
                2,
                3,
              ]
            }
            gridList={
              Array [
                Array [
                  Object {},
                  Object {
                    "id": "CDX_CI",
                    "label": "CDX CI",
                  },
                  Object {
                    "id": "CDX_CII",
                    "label": "CDX CII",
                  },
                  Object {
                    "id": "CDX_CIII",
                    "label": "CDX CIII",
                  },
                ],
                Array [
                  "teacher-001",
                  true,
                  true,
                  true,
                ],
                Array [
                  "teacher-002",
                  false,
                  false,
                  false,
                ],
              ]
            }
            handleStudentViewToggle={[Function]}
            handleTabIsolate={[Function]}
            handleTabReset={[Function]}
            handleToggle={[Function]}
            headers={
              Array [
                "header",
                "CDX_CI",
                "CDX_CII",
                "CDX_CIII",
              ]
            }
            height={40}
            isDataInitialized={false}
            isDataLoading={false}
            isolateTab={false}
            onScroll={[Function]}
            paginationData={
              Object {
                "itemCount": 0,
              }
            }
            rowCount={1}
            rowHeight={[Function]}
            rowWidth={100}
            smartBarSelections={
              Immutable.Map {
                selectedCohType: "DistrictAdmin",
              }
            }
            studentEnrollRequest={[Function]}
            studentEnrollSaveRequest={[Function]}
            studentViewEnrollSaveRequest={[Function]}
            width={740}
          >
            <MultiGrid
              cellRenderer={[Function]}
              className="teacher-enrollment__grid-footer"
              classNameBottomLeftGrid=""
              classNameBottomRightGrid=""
              classNameTopLeftGrid=""
              classNameTopRightGrid=""
              columnCount={4}
              columnWidth={120}
              enableFixedColumnScroll={false}
              enableFixedRowScroll={false}
              fixedColumnCount={1}
              fixedRowCount={0}
              footers={
                Array [
                  "footer",
                  1,
                  2,
                  3,
                ]
              }
              gridList={
                Array [
                  Array [
                    Object {},
                    Object {
                      "id": "CDX_CI",
                      "label": "CDX CI",
                    },
                    Object {
                      "id": "CDX_CII",
                      "label": "CDX CII",
                    },
                    Object {
                      "id": "CDX_CIII",
                      "label": "CDX CIII",
                    },
                  ],
                  Array [
                    "teacher-001",
                    true,
                    true,
                    true,
                  ],
                  Array [
                    "teacher-002",
                    false,
                    false,
                    false,
                  ],
                ]
              }
              handleStudentViewToggle={[Function]}
              handleTabIsolate={[Function]}
              handleTabReset={[Function]}
              handleToggle={[Function]}
              headers={
                Array [
                  "header",
                  "CDX_CI",
                  "CDX_CII",
                  "CDX_CIII",
                ]
              }
              height={40}
              isDataInitialized={false}
              isDataLoading={false}
              isolateTab={false}
              onScroll={[Function]}
              paginationData={
                Object {
                  "itemCount": 0,
                }
              }
              rowCount={1}
              rowHeight={[Function]}
              rowWidth={100}
              scrollToColumn={-1}
              scrollToRow={-1}
              smartBarSelections={
                Immutable.Map {
                  selectedCohType: "DistrictAdmin",
                }
              }
              studentEnrollRequest={[Function]}
              studentEnrollSaveRequest={[Function]}
              studentViewEnrollSaveRequest={[Function]}
              style={Object {}}
              styleBottomLeftGrid={Object {}}
              styleBottomRightGrid={Object {}}
              styleTopLeftGrid={Object {}}
              styleTopRightGrid={Object {}}
              width={740}
            >
              <div
                style={
                  Object {
                    "height": 40,
                    "overflow": "visible",
                    "width": 740,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "height": 0,
                      "position": "relative",
                      "width": 740,
                    }
                  }
                />
                <div
                  style={
                    Object {
                      "height": 40,
                      "overflow": "visible",
                      "position": "relative",
                      "width": 740,
                    }
                  }
                >
                  <Grid
                    aria-label="grid"
                    aria-readonly={true}
                    autoContainerWidth={false}
                    autoHeight={false}
                    autoWidth={false}
                    cellRangeRenderer={[Function]}
                    cellRenderer={[Function]}
                    className=""
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={1}
                    columnWidth={120}
                    containerRole="rowgroup"
                    containerStyle={Object {}}
                    enableFixedColumnScroll={false}
                    enableFixedRowScroll={false}
                    estimatedColumnSize={100}
                    estimatedRowSize={30}
                    fixedColumnCount={1}
                    fixedRowCount={0}
                    footers={
                      Array [
                        "footer",
                        1,
                        2,
                        3,
                      ]
                    }
                    getScrollbarSize={[Function]}
                    gridList={
                      Array [
                        Array [
                          Object {},
                          Object {
                            "id": "CDX_CI",
                            "label": "CDX CI",
                          },
                          Object {
                            "id": "CDX_CII",
                            "label": "CDX CII",
                          },
                          Object {
                            "id": "CDX_CIII",
                            "label": "CDX CIII",
                          },
                        ],
                        Array [
                          "teacher-001",
                          true,
                          true,
                          true,
                        ],
                        Array [
                          "teacher-002",
                          false,
                          false,
                          false,
                        ],
                      ]
                    }
                    handleStudentViewToggle={[Function]}
                    handleTabIsolate={[Function]}
                    handleTabReset={[Function]}
                    handleToggle={[Function]}
                    headers={
                      Array [
                        "header",
                        "CDX_CI",
                        "CDX_CII",
                        "CDX_CIII",
                      ]
                    }
                    height={40}
                    isDataInitialized={false}
                    isDataLoading={false}
                    isolateTab={false}
                    noContentRenderer={[Function]}
                    onScroll={[Function]}
                    onScrollbarPresenceChange={[Function]}
                    onSectionRendered={[Function]}
                    overscanColumnCount={0}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    paginationData={
                      Object {
                        "itemCount": 0,
                      }
                    }
                    role="grid"
                    rowCount={1}
                    rowHeight={[Function]}
                    rowWidth={100}
                    scrollToAlignment="auto"
                    scrollToColumn={-1}
                    scrollToRow={-1}
                    scrollTop={0}
                    scrollingResetTimeInterval={150}
                    smartBarSelections={
                      Immutable.Map {
                        selectedCohType: "DistrictAdmin",
                      }
                    }
                    studentEnrollRequest={[Function]}
                    studentEnrollSaveRequest={[Function]}
                    studentViewEnrollSaveRequest={[Function]}
                    style={
                      Object {
                        "left": 0,
                        "overflowX": "hidden",
                        "overflowY": "hidden",
                        "position": "absolute",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    tabIndex={null}
                    width={120}
                  >
                    <div
                      aria-label="grid"
                      aria-readonly={true}
                      className="ReactVirtualized__Grid"
                      onScroll={[Function]}
                      role="grid"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "boxSizing": "border-box",
                          "direction": "ltr",
                          "height": 40,
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "width": 120,
                          "willChange": "transform",
                        }
                      }
                      tabIndex={null}
                    >
                      <div
                        className="ReactVirtualized__Grid__innerScrollContainer"
                        role="rowgroup"
                        style={
                          Object {
                            "height": 20,
                            "maxHeight": 20,
                            "maxWidth": 120,
                            "overflow": "hidden",
                            "pointerEvents": "",
                            "position": "relative",
                            "width": 120,
                          }
                        }
                      >
                        <div
                          className="teacher-enrollment__grid-footer-cell  "
                          key="0-0"
                          style={
                            Object {
                              "height": 20,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          footer
                        </div>
                      </div>
                    </div>
                  </Grid>
                  <Grid
                    aria-label="grid"
                    aria-readonly={true}
                    autoContainerWidth={false}
                    autoHeight={false}
                    autoWidth={false}
                    cellRangeRenderer={[Function]}
                    cellRenderer={[Function]}
                    className=""
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={3}
                    columnWidth={[Function]}
                    containerRole="rowgroup"
                    containerStyle={Object {}}
                    enableFixedColumnScroll={false}
                    enableFixedRowScroll={false}
                    estimatedColumnSize={100}
                    estimatedRowSize={30}
                    fixedColumnCount={1}
                    fixedRowCount={0}
                    footers={
                      Array [
                        "footer",
                        1,
                        2,
                        3,
                      ]
                    }
                    getScrollbarSize={[Function]}
                    gridList={
                      Array [
                        Array [
                          Object {},
                          Object {
                            "id": "CDX_CI",
                            "label": "CDX CI",
                          },
                          Object {
                            "id": "CDX_CII",
                            "label": "CDX CII",
                          },
                          Object {
                            "id": "CDX_CIII",
                            "label": "CDX CIII",
                          },
                        ],
                        Array [
                          "teacher-001",
                          true,
                          true,
                          true,
                        ],
                        Array [
                          "teacher-002",
                          false,
                          false,
                          false,
                        ],
                      ]
                    }
                    handleStudentViewToggle={[Function]}
                    handleTabIsolate={[Function]}
                    handleTabReset={[Function]}
                    handleToggle={[Function]}
                    headers={
                      Array [
                        "header",
                        "CDX_CI",
                        "CDX_CII",
                        "CDX_CIII",
                      ]
                    }
                    height={40}
                    isDataInitialized={false}
                    isDataLoading={false}
                    isolateTab={false}
                    noContentRenderer={[Function]}
                    onScroll={[Function]}
                    onScrollbarPresenceChange={[Function]}
                    onSectionRendered={[Function]}
                    overscanColumnCount={0}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    paginationData={
                      Object {
                        "itemCount": 0,
                      }
                    }
                    role="grid"
                    rowCount={1}
                    rowHeight={[Function]}
                    rowWidth={100}
                    scrollLeft={0}
                    scrollToAlignment="auto"
                    scrollToColumn={-2}
                    scrollToRow={-1}
                    scrollTop={0}
                    scrollingResetTimeInterval={150}
                    smartBarSelections={
                      Immutable.Map {
                        selectedCohType: "DistrictAdmin",
                      }
                    }
                    studentEnrollRequest={[Function]}
                    studentEnrollSaveRequest={[Function]}
                    studentViewEnrollSaveRequest={[Function]}
                    style={
                      Object {
                        "left": 120,
                        "position": "absolute",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    tabIndex={0}
                    width={620}
                  >
                    <div
                      aria-label="grid"
                      aria-readonly={true}
                      className="ReactVirtualized__Grid"
                      onScroll={[Function]}
                      role="grid"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "boxSizing": "border-box",
                          "direction": "ltr",
                          "height": 40,
                          "left": 120,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "width": 620,
                          "willChange": "transform",
                        }
                      }
                      tabIndex={0}
                    >
                      <div
                        className="ReactVirtualized__Grid__innerScrollContainer"
                        role="rowgroup"
                        style={
                          Object {
                            "height": 20,
                            "maxHeight": 20,
                            "maxWidth": 360,
                            "overflow": "hidden",
                            "pointerEvents": "",
                            "position": "relative",
                            "width": 360,
                          }
                        }
                      >
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-0"
                          style={
                            Object {
                              "height": 20,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          1
                        </div>
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-1"
                          style={
                            Object {
                              "height": 20,
                              "left": 120,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          2
                        </div>
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-2"
                          style={
                            Object {
                              "height": 20,
                              "left": 240,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          3
                        </div>
                      </div>
                    </div>
                  </Grid>
                </div>
              </div>
            </MultiGrid>
          </SAMGrid>
        </div>
      </ScrollSync>
      <div
        className="student-enrollment-footer"
      >
        <div
          className="student-enrollment-footer__buttons"
        >
          <mockConstructor
            buttonClassModifier="student-enrollment-cancel__btn"
            to="/roster"
          >
            <div />
          </mockConstructor>
        </div>
        <div
          className="student-enrollment__pagination"
        >
           
          <div
            className="teacher-enrollment__item-accumulator"
          >
            Items 1 through 0 of 0
          </div>
          <a
            activePage={1}
            firstPageText="first"
            getPageUrl={[Function]}
            hideFirstLastPages={false}
            innerClass="pagination"
            itemClass=""
            itemsCountPerPage={500}
            lastPageText="last"
            nextPageText="next"
            onChange={[Function]}
            pageRangeDisplayed={3}
            prevPageText="prev"
            totalItemsCount={0}
          >
            <ul
              className="pagination"
            >
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="first"
                linkClass=""
                onClick={[Function]}
                pageNumber={1}
                pageText="first"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    first
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="prev-1"
                linkClass=""
                onClick={[Function]}
                pageNumber={-1}
                pageText="prev"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    prev
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="next1"
                linkClass=""
                onClick={[Function]}
                pageNumber={1}
                pageText="next"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    next
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="last"
                linkClass=""
                onClick={[Function]}
                pageNumber={0}
                pageText="last"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    last
                  </a>
                </li>
              </t>
            </ul>
          </a>
        </div>
      </div>
    </div>
  </div>
</StudentEnrollmentTable>
`;

exports[`<StudentEnrollmentTable /> Expect to render correctly for non-students 1`] = `
<StudentEnrollmentTable
  footers={
    Array [
      "footer",
      1,
      2,
      3,
    ]
  }
  gridList={
    Array [
      Array [
        "header-row",
        Object {
          "id": "CDX_CI",
          "label": "CDX CI",
        },
        Object {
          "id": "CDX_CII",
          "label": "CDX CII",
        },
        Object {
          "id": "CDX_CIII",
          "label": "CDX CIII",
        },
      ],
      Array [
        "teacher-001",
        true,
        true,
        true,
      ],
      Array [
        "teacher-002",
        false,
        false,
        false,
      ],
    ]
  }
  handleStudentViewToggle={[Function]}
  handleTabIsolate={[Function]}
  handleTabReset={[Function]}
  handleToggle={[Function]}
  headers={
    Array [
      "header",
      "CDX_CI",
      "CDX_CII",
      "CDX_CIII",
    ]
  }
  isDataInitialized={false}
  isDataLoading={false}
  isolateTab={false}
  paginationData={
    Object {
      "itemCount": 0,
    }
  }
  smartBarSelections={
    Immutable.Map {
      selectedCohType: "DistrictAdmin",
    }
  }
  studentEnrollRequest={[Function]}
  studentEnrollSaveRequest={[Function]}
  studentViewEnrollSaveRequest={[Function]}
>
  <div>
    <div
      className="teacher-enrollment "
    >
      <div
        className="teacher-enrollment-header"
      >
        Use the check boxes to enroll or unenroll students in HMH programs. Use the check box at the top of each column to enroll all students in that program.
      </div>
      <ScrollSync>
        <div
          className="teacher-enrollment__grid"
        >
          <div
            className="teacher-enrollment__grid-body"
            onChange={[Function]}
          >
            <SAMGrid
              cellRenderer={[Function]}
              className="teacher-enrollment__grid"
              columnCount={5}
              columnWidth={120}
              fixedColumnCount={1}
              fixedRowCount={1}
              footers={
                Array [
                  "footer",
                  1,
                  2,
                  3,
                ]
              }
              gridList={
                Array [
                  Array [
                    "header-row",
                    Object {
                      "id": "CDX_CI",
                      "label": "CDX CI",
                    },
                    Object {
                      "id": "CDX_CII",
                      "label": "CDX CII",
                    },
                    Object {
                      "id": "CDX_CIII",
                      "label": "CDX CIII",
                    },
                  ],
                  Array [
                    "teacher-001",
                    true,
                    true,
                    true,
                  ],
                  Array [
                    "teacher-002",
                    false,
                    false,
                    false,
                  ],
                ]
              }
              handleStudentViewToggle={[Function]}
              handleTabIsolate={[Function]}
              handleTabReset={[Function]}
              handleToggle={[Function]}
              headers={
                Array [
                  "header",
                  "CDX_CI",
                  "CDX_CII",
                  "CDX_CIII",
                ]
              }
              height={300}
              isDataInitialized={false}
              isDataLoading={false}
              isolateTab={false}
              key="data-pg-1"
              paginationData={
                Object {
                  "itemCount": 0,
                }
              }
              rowCount={3}
              rowHeight={[Function]}
              rowWidth={100}
              scrollLeft={0}
              smartBarSelections={
                Immutable.Map {
                  selectedCohType: "DistrictAdmin",
                }
              }
              studentEnrollRequest={[Function]}
              studentEnrollSaveRequest={[Function]}
              studentViewEnrollSaveRequest={[Function]}
              width={740}
            >
              <MultiGrid
                cellRenderer={[Function]}
                className="teacher-enrollment__grid"
                classNameBottomLeftGrid=""
                classNameBottomRightGrid=""
                classNameTopLeftGrid=""
                classNameTopRightGrid=""
                columnCount={5}
                columnWidth={120}
                enableFixedColumnScroll={false}
                enableFixedRowScroll={false}
                fixedColumnCount={1}
                fixedRowCount={1}
                footers={
                  Array [
                    "footer",
                    1,
                    2,
                    3,
                  ]
                }
                gridList={
                  Array [
                    Array [
                      "header-row",
                      Object {
                        "id": "CDX_CI",
                        "label": "CDX CI",
                      },
                      Object {
                        "id": "CDX_CII",
                        "label": "CDX CII",
                      },
                      Object {
                        "id": "CDX_CIII",
                        "label": "CDX CIII",
                      },
                    ],
                    Array [
                      "teacher-001",
                      true,
                      true,
                      true,
                    ],
                    Array [
                      "teacher-002",
                      false,
                      false,
                      false,
                    ],
                  ]
                }
                handleStudentViewToggle={[Function]}
                handleTabIsolate={[Function]}
                handleTabReset={[Function]}
                handleToggle={[Function]}
                headers={
                  Array [
                    "header",
                    "CDX_CI",
                    "CDX_CII",
                    "CDX_CIII",
                  ]
                }
                height={300}
                isDataInitialized={false}
                isDataLoading={false}
                isolateTab={false}
                paginationData={
                  Object {
                    "itemCount": 0,
                  }
                }
                rowCount={3}
                rowHeight={[Function]}
                rowWidth={100}
                scrollLeft={0}
                scrollToColumn={-1}
                scrollToRow={-1}
                smartBarSelections={
                  Immutable.Map {
                    selectedCohType: "DistrictAdmin",
                  }
                }
                studentEnrollRequest={[Function]}
                studentEnrollSaveRequest={[Function]}
                studentViewEnrollSaveRequest={[Function]}
                style={Object {}}
                styleBottomLeftGrid={Object {}}
                styleBottomRightGrid={Object {}}
                styleTopLeftGrid={Object {}}
                styleTopRightGrid={Object {}}
                width={740}
              >
                <div
                  style={
                    Object {
                      "height": 300,
                      "overflow": "visible",
                      "width": 740,
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "height": 70,
                        "position": "relative",
                        "width": 740,
                      }
                    }
                  >
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={1}
                      columnWidth={120}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={70}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={120}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 70,
                            "left": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "top": 0,
                            "width": 120,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 70,
                              "maxHeight": 70,
                              "maxWidth": 120,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 120,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-header teacher-enrollment__grid-header--selected"
                            key="0-0"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            header-row
                          </div>
                        </div>
                      </div>
                    </Grid>
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={4}
                      columnWidth={[Function]}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={70}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollLeft={0}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 120,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={620}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 70,
                            "left": 120,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "top": 0,
                            "width": 620,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 70,
                              "maxHeight": 70,
                              "maxWidth": 480,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 480,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-0"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CI
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={1}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-1"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 120,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CII
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={2}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-2"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 240,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CIII
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={3}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-3"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 360,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span />
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={4}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </div>
                  <div
                    style={
                      Object {
                        "height": 230,
                        "overflow": "visible",
                        "position": "relative",
                        "width": 740,
                      }
                    }
                  >
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={1}
                      columnWidth={120}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={230}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollTop={0}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={120}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 230,
                            "left": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "width": 120,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 40,
                              "maxHeight": 40,
                              "maxWidth": 120,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 120,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-cell"
                            key="0-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            teacher-001
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell"
                            key="1-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            teacher-002
                          </div>
                        </div>
                      </div>
                    </Grid>
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={4}
                      columnWidth={[Function]}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={230}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollLeft={0}
                      scrollToAlignment="auto"
                      scrollToColumn={-2}
                      scrollToRow={-2}
                      scrollTop={0}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 120,
                          "position": "absolute",
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={0}
                      width={620}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 230,
                            "left": 120,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "width": 620,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 40,
                              "maxHeight": 40,
                              "maxWidth": 480,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 480,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={1}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-1"
                            style={
                              Object {
                                "height": 20,
                                "left": 120,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={2}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-2"
                            style={
                              Object {
                                "height": 20,
                                "left": 240,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={3}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-3"
                            style={
                              Object {
                                "height": 20,
                                "left": 360,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={4}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={1}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-1"
                            style={
                              Object {
                                "height": 20,
                                "left": 120,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={2}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-2"
                            style={
                              Object {
                                "height": 20,
                                "left": 240,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={3}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-3"
                            style={
                              Object {
                                "height": 20,
                                "left": 360,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={4}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </div>
                </div>
              </MultiGrid>
            </SAMGrid>
          </div>
          <SAMGrid
            cellRenderer={[Function]}
            className="teacher-enrollment__grid-footer"
            columnCount={4}
            columnWidth={120}
            fixedColumnCount={1}
            fixedRowCount={0}
            footers={
              Array [
                "footer",
                1,
                2,
                3,
              ]
            }
            gridList={
              Array [
                Array [
                  "header-row",
                  Object {
                    "id": "CDX_CI",
                    "label": "CDX CI",
                  },
                  Object {
                    "id": "CDX_CII",
                    "label": "CDX CII",
                  },
                  Object {
                    "id": "CDX_CIII",
                    "label": "CDX CIII",
                  },
                ],
                Array [
                  "teacher-001",
                  true,
                  true,
                  true,
                ],
                Array [
                  "teacher-002",
                  false,
                  false,
                  false,
                ],
              ]
            }
            handleStudentViewToggle={[Function]}
            handleTabIsolate={[Function]}
            handleTabReset={[Function]}
            handleToggle={[Function]}
            headers={
              Array [
                "header",
                "CDX_CI",
                "CDX_CII",
                "CDX_CIII",
              ]
            }
            height={40}
            isDataInitialized={false}
            isDataLoading={false}
            isolateTab={false}
            onScroll={[Function]}
            paginationData={
              Object {
                "itemCount": 0,
              }
            }
            rowCount={1}
            rowHeight={[Function]}
            rowWidth={100}
            smartBarSelections={
              Immutable.Map {
                selectedCohType: "DistrictAdmin",
              }
            }
            studentEnrollRequest={[Function]}
            studentEnrollSaveRequest={[Function]}
            studentViewEnrollSaveRequest={[Function]}
            width={740}
          >
            <MultiGrid
              cellRenderer={[Function]}
              className="teacher-enrollment__grid-footer"
              classNameBottomLeftGrid=""
              classNameBottomRightGrid=""
              classNameTopLeftGrid=""
              classNameTopRightGrid=""
              columnCount={4}
              columnWidth={120}
              enableFixedColumnScroll={false}
              enableFixedRowScroll={false}
              fixedColumnCount={1}
              fixedRowCount={0}
              footers={
                Array [
                  "footer",
                  1,
                  2,
                  3,
                ]
              }
              gridList={
                Array [
                  Array [
                    "header-row",
                    Object {
                      "id": "CDX_CI",
                      "label": "CDX CI",
                    },
                    Object {
                      "id": "CDX_CII",
                      "label": "CDX CII",
                    },
                    Object {
                      "id": "CDX_CIII",
                      "label": "CDX CIII",
                    },
                  ],
                  Array [
                    "teacher-001",
                    true,
                    true,
                    true,
                  ],
                  Array [
                    "teacher-002",
                    false,
                    false,
                    false,
                  ],
                ]
              }
              handleStudentViewToggle={[Function]}
              handleTabIsolate={[Function]}
              handleTabReset={[Function]}
              handleToggle={[Function]}
              headers={
                Array [
                  "header",
                  "CDX_CI",
                  "CDX_CII",
                  "CDX_CIII",
                ]
              }
              height={40}
              isDataInitialized={false}
              isDataLoading={false}
              isolateTab={false}
              onScroll={[Function]}
              paginationData={
                Object {
                  "itemCount": 0,
                }
              }
              rowCount={1}
              rowHeight={[Function]}
              rowWidth={100}
              scrollToColumn={-1}
              scrollToRow={-1}
              smartBarSelections={
                Immutable.Map {
                  selectedCohType: "DistrictAdmin",
                }
              }
              studentEnrollRequest={[Function]}
              studentEnrollSaveRequest={[Function]}
              studentViewEnrollSaveRequest={[Function]}
              style={Object {}}
              styleBottomLeftGrid={Object {}}
              styleBottomRightGrid={Object {}}
              styleTopLeftGrid={Object {}}
              styleTopRightGrid={Object {}}
              width={740}
            >
              <div
                style={
                  Object {
                    "height": 40,
                    "overflow": "visible",
                    "width": 740,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "height": 0,
                      "position": "relative",
                      "width": 740,
                    }
                  }
                />
                <div
                  style={
                    Object {
                      "height": 40,
                      "overflow": "visible",
                      "position": "relative",
                      "width": 740,
                    }
                  }
                >
                  <Grid
                    aria-label="grid"
                    aria-readonly={true}
                    autoContainerWidth={false}
                    autoHeight={false}
                    autoWidth={false}
                    cellRangeRenderer={[Function]}
                    cellRenderer={[Function]}
                    className=""
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={1}
                    columnWidth={120}
                    containerRole="rowgroup"
                    containerStyle={Object {}}
                    enableFixedColumnScroll={false}
                    enableFixedRowScroll={false}
                    estimatedColumnSize={100}
                    estimatedRowSize={30}
                    fixedColumnCount={1}
                    fixedRowCount={0}
                    footers={
                      Array [
                        "footer",
                        1,
                        2,
                        3,
                      ]
                    }
                    getScrollbarSize={[Function]}
                    gridList={
                      Array [
                        Array [
                          "header-row",
                          Object {
                            "id": "CDX_CI",
                            "label": "CDX CI",
                          },
                          Object {
                            "id": "CDX_CII",
                            "label": "CDX CII",
                          },
                          Object {
                            "id": "CDX_CIII",
                            "label": "CDX CIII",
                          },
                        ],
                        Array [
                          "teacher-001",
                          true,
                          true,
                          true,
                        ],
                        Array [
                          "teacher-002",
                          false,
                          false,
                          false,
                        ],
                      ]
                    }
                    handleStudentViewToggle={[Function]}
                    handleTabIsolate={[Function]}
                    handleTabReset={[Function]}
                    handleToggle={[Function]}
                    headers={
                      Array [
                        "header",
                        "CDX_CI",
                        "CDX_CII",
                        "CDX_CIII",
                      ]
                    }
                    height={40}
                    isDataInitialized={false}
                    isDataLoading={false}
                    isolateTab={false}
                    noContentRenderer={[Function]}
                    onScroll={[Function]}
                    onScrollbarPresenceChange={[Function]}
                    onSectionRendered={[Function]}
                    overscanColumnCount={0}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    paginationData={
                      Object {
                        "itemCount": 0,
                      }
                    }
                    role="grid"
                    rowCount={1}
                    rowHeight={[Function]}
                    rowWidth={100}
                    scrollToAlignment="auto"
                    scrollToColumn={-1}
                    scrollToRow={-1}
                    scrollTop={0}
                    scrollingResetTimeInterval={150}
                    smartBarSelections={
                      Immutable.Map {
                        selectedCohType: "DistrictAdmin",
                      }
                    }
                    studentEnrollRequest={[Function]}
                    studentEnrollSaveRequest={[Function]}
                    studentViewEnrollSaveRequest={[Function]}
                    style={
                      Object {
                        "left": 0,
                        "overflowX": "hidden",
                        "overflowY": "hidden",
                        "position": "absolute",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    tabIndex={null}
                    width={120}
                  >
                    <div
                      aria-label="grid"
                      aria-readonly={true}
                      className="ReactVirtualized__Grid"
                      onScroll={[Function]}
                      role="grid"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "boxSizing": "border-box",
                          "direction": "ltr",
                          "height": 40,
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "width": 120,
                          "willChange": "transform",
                        }
                      }
                      tabIndex={null}
                    >
                      <div
                        className="ReactVirtualized__Grid__innerScrollContainer"
                        role="rowgroup"
                        style={
                          Object {
                            "height": 20,
                            "maxHeight": 20,
                            "maxWidth": 120,
                            "overflow": "hidden",
                            "pointerEvents": "",
                            "position": "relative",
                            "width": 120,
                          }
                        }
                      >
                        <div
                          className="teacher-enrollment__grid-footer-cell  "
                          key="0-0"
                          style={
                            Object {
                              "height": 20,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          footer
                        </div>
                      </div>
                    </div>
                  </Grid>
                  <Grid
                    aria-label="grid"
                    aria-readonly={true}
                    autoContainerWidth={false}
                    autoHeight={false}
                    autoWidth={false}
                    cellRangeRenderer={[Function]}
                    cellRenderer={[Function]}
                    className=""
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={3}
                    columnWidth={[Function]}
                    containerRole="rowgroup"
                    containerStyle={Object {}}
                    enableFixedColumnScroll={false}
                    enableFixedRowScroll={false}
                    estimatedColumnSize={100}
                    estimatedRowSize={30}
                    fixedColumnCount={1}
                    fixedRowCount={0}
                    footers={
                      Array [
                        "footer",
                        1,
                        2,
                        3,
                      ]
                    }
                    getScrollbarSize={[Function]}
                    gridList={
                      Array [
                        Array [
                          "header-row",
                          Object {
                            "id": "CDX_CI",
                            "label": "CDX CI",
                          },
                          Object {
                            "id": "CDX_CII",
                            "label": "CDX CII",
                          },
                          Object {
                            "id": "CDX_CIII",
                            "label": "CDX CIII",
                          },
                        ],
                        Array [
                          "teacher-001",
                          true,
                          true,
                          true,
                        ],
                        Array [
                          "teacher-002",
                          false,
                          false,
                          false,
                        ],
                      ]
                    }
                    handleStudentViewToggle={[Function]}
                    handleTabIsolate={[Function]}
                    handleTabReset={[Function]}
                    handleToggle={[Function]}
                    headers={
                      Array [
                        "header",
                        "CDX_CI",
                        "CDX_CII",
                        "CDX_CIII",
                      ]
                    }
                    height={40}
                    isDataInitialized={false}
                    isDataLoading={false}
                    isolateTab={false}
                    noContentRenderer={[Function]}
                    onScroll={[Function]}
                    onScrollbarPresenceChange={[Function]}
                    onSectionRendered={[Function]}
                    overscanColumnCount={0}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    paginationData={
                      Object {
                        "itemCount": 0,
                      }
                    }
                    role="grid"
                    rowCount={1}
                    rowHeight={[Function]}
                    rowWidth={100}
                    scrollLeft={0}
                    scrollToAlignment="auto"
                    scrollToColumn={-2}
                    scrollToRow={-1}
                    scrollTop={0}
                    scrollingResetTimeInterval={150}
                    smartBarSelections={
                      Immutable.Map {
                        selectedCohType: "DistrictAdmin",
                      }
                    }
                    studentEnrollRequest={[Function]}
                    studentEnrollSaveRequest={[Function]}
                    studentViewEnrollSaveRequest={[Function]}
                    style={
                      Object {
                        "left": 120,
                        "position": "absolute",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    tabIndex={0}
                    width={620}
                  >
                    <div
                      aria-label="grid"
                      aria-readonly={true}
                      className="ReactVirtualized__Grid"
                      onScroll={[Function]}
                      role="grid"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "boxSizing": "border-box",
                          "direction": "ltr",
                          "height": 40,
                          "left": 120,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "width": 620,
                          "willChange": "transform",
                        }
                      }
                      tabIndex={0}
                    >
                      <div
                        className="ReactVirtualized__Grid__innerScrollContainer"
                        role="rowgroup"
                        style={
                          Object {
                            "height": 20,
                            "maxHeight": 20,
                            "maxWidth": 360,
                            "overflow": "hidden",
                            "pointerEvents": "",
                            "position": "relative",
                            "width": 360,
                          }
                        }
                      >
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-0"
                          style={
                            Object {
                              "height": 20,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          1
                        </div>
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-1"
                          style={
                            Object {
                              "height": 20,
                              "left": 120,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          2
                        </div>
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-2"
                          style={
                            Object {
                              "height": 20,
                              "left": 240,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          3
                        </div>
                      </div>
                    </div>
                  </Grid>
                </div>
              </div>
            </MultiGrid>
          </SAMGrid>
        </div>
      </ScrollSync>
      <div
        className="student-enrollment-footer"
      >
        <div
          className="student-enrollment-footer__buttons"
        >
          <mockConstructor
            buttonClassModifier="student-enrollment-cancel__btn"
            to="/roster"
          >
            <div />
          </mockConstructor>
        </div>
        <div
          className="student-enrollment__pagination"
        >
           
          <div
            className="teacher-enrollment__item-accumulator"
          >
            Items 1 through 0 of 0
          </div>
          <a
            activePage={1}
            firstPageText="first"
            getPageUrl={[Function]}
            hideFirstLastPages={false}
            innerClass="pagination"
            itemClass=""
            itemsCountPerPage={500}
            lastPageText="last"
            nextPageText="next"
            onChange={[Function]}
            pageRangeDisplayed={3}
            prevPageText="prev"
            totalItemsCount={0}
          >
            <ul
              className="pagination"
            >
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="first"
                linkClass=""
                onClick={[Function]}
                pageNumber={1}
                pageText="first"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    first
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="prev-1"
                linkClass=""
                onClick={[Function]}
                pageNumber={-1}
                pageText="prev"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    prev
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="next1"
                linkClass=""
                onClick={[Function]}
                pageNumber={1}
                pageText="next"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    next
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="last"
                linkClass=""
                onClick={[Function]}
                pageNumber={0}
                pageText="last"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    last
                  </a>
                </li>
              </t>
            </ul>
          </a>
        </div>
      </div>
    </div>
  </div>
</StudentEnrollmentTable>
`;

exports[`<StudentEnrollmentTable /> Expect to render correctly for students 1`] = `
<StudentEnrollmentTable
  footers={
    Array [
      "footer",
      1,
      2,
      3,
    ]
  }
  gridList={
    Array [
      Array [
        "header-row",
        Object {
          "id": "CDX_CI",
          "label": "CDX CI",
        },
        Object {
          "id": "CDX_CII",
          "label": "CDX CII",
        },
        Object {
          "id": "CDX_CIII",
          "label": "CDX CIII",
        },
      ],
      Array [
        "teacher-001",
        true,
        true,
        true,
      ],
      Array [
        "teacher-002",
        false,
        false,
        false,
      ],
    ]
  }
  handleStudentViewToggle={[Function]}
  handleTabIsolate={[Function]}
  handleTabReset={[Function]}
  handleToggle={[Function]}
  headers={
    Array [
      "header",
      "CDX_CI",
      "CDX_CII",
      "CDX_CIII",
    ]
  }
  immPaginationData={
    Object {
      "itemCount": 1,
    }
  }
  isDataInitialized={true}
  isDataLoading={true}
  isolateTab={false}
  paginationData={
    Object {
      "itemCount": 0,
    }
  }
  smartBarSelections={
    Immutable.Map {
      selectedCohType: "Student",
    }
  }
  studentEnrollRequest={[Function]}
  studentEnrollSaveRequest={[Function]}
  studentViewEnrollSaveRequest={[Function]}
>
  <div>
    <div
      className="teacher-enrollment teacher-enrollment--loading"
    >
      <div
        className="student-enrollment-header"
      >
        Manage Student Enrollment
      </div>
      <div
        className="student-enrollment-header__subset"
      >
        Use the check boxes to enroll or unenroll students in HMH programs.
      </div>
      <div
        className="teacher-enrollment__loading"
      >
        <LoadingBar>
          <div
            className="loading-bar"
          />
        </LoadingBar>
      </div>
      <div
        className="student-view-container"
      >
        <table
          className="student-view"
        >
          <thead>
            <tr
              className="student-view-header"
            >
              <th
                className="student-view-header__label"
              >
                Enroll this student in the following application(s):
              </th>
            </tr>
          </thead>
          <tbody
            className="student-view-body"
          >
            <tr
              key="0"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={0}
                  id="student-products_0"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_0"
                />
              </td>
            </tr>
            <tr
              key="1"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={1}
                  id="student-products_1"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_1"
                >
                  CDX CI
                </label>
              </td>
            </tr>
            <tr
              key="2"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={2}
                  id="student-products_2"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_2"
                >
                  CDX CII
                </label>
              </td>
            </tr>
            <tr
              key="3"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={3}
                  id="student-products_3"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_3"
                >
                  CDX CIII
                </label>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <div
        className="student-enrollment-footer__studentview"
      >
        <div
          className="student-enrollment-footer__buttons"
        >
          <mockConstructor
            buttonClassModifier="student-enrollment-cancel__btn"
            to="/roster"
          >
            <div />
          </mockConstructor>
        </div>
      </div>
    </div>
  </div>
</StudentEnrollmentTable>
`;

exports[`<StudentEnrollmentTable /> Expect to render correctly for students while loading 1`] = `
<StudentEnrollmentTable
  footers={
    Array [
      "footer",
      1,
      2,
      3,
    ]
  }
  gridList={
    Array [
      Array [
        "header-row",
        Object {
          "id": "CDX_CI",
          "label": "CDX CI",
        },
        Object {
          "id": "CDX_CII",
          "label": "CDX CII",
        },
        Object {
          "id": "CDX_CIII",
          "label": "CDX CIII",
        },
      ],
      Array [
        "teacher-001",
        true,
        true,
        true,
      ],
      Array [
        "teacher-002",
        false,
        false,
        false,
      ],
    ]
  }
  handleStudentViewToggle={[Function]}
  handleTabIsolate={[Function]}
  handleTabReset={[Function]}
  handleToggle={[Function]}
  headers={
    Array [
      "header",
      "CDX_CI",
      "CDX_CII",
      "CDX_CIII",
    ]
  }
  isDataInitialized={false}
  isDataLoading={false}
  isolateTab={false}
  paginationData={
    Object {
      "itemCount": 0,
    }
  }
  smartBarSelections={
    Immutable.Map {
      selectedCohType: "Student",
    }
  }
  studentEnrollRequest={[Function]}
  studentEnrollSaveRequest={[Function]}
  studentViewEnrollSaveRequest={[Function]}
>
  <div>
    <div
      className="teacher-enrollment "
    >
      <div
        className="student-enrollment-header"
      >
        Manage Student Enrollment
      </div>
      <div
        className="student-enrollment-header__subset"
      >
        Use the check boxes to enroll or unenroll students in HMH programs.
      </div>
      <div
        className="student-view-container"
      >
        <table
          className="student-view"
        >
          <thead>
            <tr
              className="student-view-header"
            >
              <th
                className="student-view-header__label"
              >
                Enroll this student in the following application(s):
              </th>
            </tr>
          </thead>
          <tbody
            className="student-view-body"
          >
            <tr
              key="0"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={0}
                  id="student-products_0"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_0"
                />
              </td>
            </tr>
            <tr
              key="1"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={1}
                  id="student-products_1"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_1"
                >
                  CDX CI
                </label>
              </td>
            </tr>
            <tr
              key="2"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={2}
                  id="student-products_2"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_2"
                >
                  CDX CII
                </label>
              </td>
            </tr>
            <tr
              key="3"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={3}
                  id="student-products_3"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_3"
                >
                  CDX CIII
                </label>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <div
        className="student-enrollment-footer__studentview"
      >
        <div
          className="student-enrollment-footer__buttons"
        >
          <mockConstructor
            buttonClassModifier="student-enrollment-cancel__btn"
            to="/roster"
          >
            <div />
          </mockConstructor>
        </div>
      </div>
    </div>
  </div>
</StudentEnrollmentTable>
`;

exports[`<StudentEnrollmentTable /> Expect to render correctly when data loading 1`] = `
<StudentEnrollmentTable
  footers={
    Array [
      "footer",
      1,
      2,
      3,
    ]
  }
  gridList={
    Array [
      Array [
        "header-row",
        Object {
          "id": "CDX_CI",
          "label": "CDX CI",
        },
        Object {
          "id": "CDX_CII",
          "label": "CDX CII",
        },
        Object {
          "id": "CDX_CIII",
          "label": "CDX CIII",
        },
      ],
      Array [
        "teacher-001",
        true,
        true,
        true,
      ],
      Array [
        "teacher-002",
        false,
        false,
        false,
      ],
    ]
  }
  handleStudentViewToggle={[Function]}
  handleTabIsolate={[Function]}
  handleTabReset={[Function]}
  handleToggle={[Function]}
  headers={
    Array [
      "header",
      "CDX_CI",
      "CDX_CII",
      "CDX_CIII",
    ]
  }
  isDataInitialized={true}
  isDataLoading={true}
  isolateTab={false}
  paginationData={
    Object {
      "itemCount": 0,
    }
  }
  smartBarSelections={
    Immutable.Map {
      selectedCohType: "DistrictAdmin",
    }
  }
  studentEnrollRequest={[Function]}
  studentEnrollSaveRequest={[Function]}
  studentViewEnrollSaveRequest={[Function]}
>
  <div>
    <div
      className="teacher-enrollment teacher-enrollment--loading"
    >
      <div
        className="teacher-enrollment-header"
      >
        Use the check boxes to enroll or unenroll students in HMH programs. Use the check box at the top of each column to enroll all students in that program.
      </div>
      <div
        className="teacher-enrollment__loading"
      >
        <LoadingBar>
          <div
            className="loading-bar"
          />
        </LoadingBar>
      </div>
      <ScrollSync>
        <div
          className="teacher-enrollment__grid"
        >
          <div
            className="teacher-enrollment__grid-body"
            onChange={[Function]}
          >
            <SAMGrid
              cellRenderer={[Function]}
              className="teacher-enrollment__grid"
              columnCount={5}
              columnWidth={120}
              fixedColumnCount={1}
              fixedRowCount={1}
              footers={
                Array [
                  "footer",
                  1,
                  2,
                  3,
                ]
              }
              gridList={
                Array [
                  Array [
                    "header-row",
                    Object {
                      "id": "CDX_CI",
                      "label": "CDX CI",
                    },
                    Object {
                      "id": "CDX_CII",
                      "label": "CDX CII",
                    },
                    Object {
                      "id": "CDX_CIII",
                      "label": "CDX CIII",
                    },
                  ],
                  Array [
                    "teacher-001",
                    true,
                    true,
                    true,
                  ],
                  Array [
                    "teacher-002",
                    false,
                    false,
                    false,
                  ],
                ]
              }
              handleStudentViewToggle={[Function]}
              handleTabIsolate={[Function]}
              handleTabReset={[Function]}
              handleToggle={[Function]}
              headers={
                Array [
                  "header",
                  "CDX_CI",
                  "CDX_CII",
                  "CDX_CIII",
                ]
              }
              height={300}
              isDataInitialized={true}
              isDataLoading={true}
              isolateTab={false}
              key="data-pg-1"
              paginationData={
                Object {
                  "itemCount": 0,
                }
              }
              rowCount={3}
              rowHeight={[Function]}
              rowWidth={100}
              scrollLeft={0}
              smartBarSelections={
                Immutable.Map {
                  selectedCohType: "DistrictAdmin",
                }
              }
              studentEnrollRequest={[Function]}
              studentEnrollSaveRequest={[Function]}
              studentViewEnrollSaveRequest={[Function]}
              width={740}
            >
              <MultiGrid
                cellRenderer={[Function]}
                className="teacher-enrollment__grid"
                classNameBottomLeftGrid=""
                classNameBottomRightGrid=""
                classNameTopLeftGrid=""
                classNameTopRightGrid=""
                columnCount={5}
                columnWidth={120}
                enableFixedColumnScroll={false}
                enableFixedRowScroll={false}
                fixedColumnCount={1}
                fixedRowCount={1}
                footers={
                  Array [
                    "footer",
                    1,
                    2,
                    3,
                  ]
                }
                gridList={
                  Array [
                    Array [
                      "header-row",
                      Object {
                        "id": "CDX_CI",
                        "label": "CDX CI",
                      },
                      Object {
                        "id": "CDX_CII",
                        "label": "CDX CII",
                      },
                      Object {
                        "id": "CDX_CIII",
                        "label": "CDX CIII",
                      },
                    ],
                    Array [
                      "teacher-001",
                      true,
                      true,
                      true,
                    ],
                    Array [
                      "teacher-002",
                      false,
                      false,
                      false,
                    ],
                  ]
                }
                handleStudentViewToggle={[Function]}
                handleTabIsolate={[Function]}
                handleTabReset={[Function]}
                handleToggle={[Function]}
                headers={
                  Array [
                    "header",
                    "CDX_CI",
                    "CDX_CII",
                    "CDX_CIII",
                  ]
                }
                height={300}
                isDataInitialized={true}
                isDataLoading={true}
                isolateTab={false}
                paginationData={
                  Object {
                    "itemCount": 0,
                  }
                }
                rowCount={3}
                rowHeight={[Function]}
                rowWidth={100}
                scrollLeft={0}
                scrollToColumn={-1}
                scrollToRow={-1}
                smartBarSelections={
                  Immutable.Map {
                    selectedCohType: "DistrictAdmin",
                  }
                }
                studentEnrollRequest={[Function]}
                studentEnrollSaveRequest={[Function]}
                studentViewEnrollSaveRequest={[Function]}
                style={Object {}}
                styleBottomLeftGrid={Object {}}
                styleBottomRightGrid={Object {}}
                styleTopLeftGrid={Object {}}
                styleTopRightGrid={Object {}}
                width={740}
              >
                <div
                  style={
                    Object {
                      "height": 300,
                      "overflow": "visible",
                      "width": 740,
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "height": 70,
                        "position": "relative",
                        "width": 740,
                      }
                    }
                  >
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={1}
                      columnWidth={120}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={70}
                      isDataInitialized={true}
                      isDataLoading={true}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={120}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 70,
                            "left": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "top": 0,
                            "width": 120,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 70,
                              "maxHeight": 70,
                              "maxWidth": 120,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 120,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-header teacher-enrollment__grid-header--selected"
                            key="0-0"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            header-row
                          </div>
                        </div>
                      </div>
                    </Grid>
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={4}
                      columnWidth={[Function]}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={70}
                      isDataInitialized={true}
                      isDataLoading={true}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollLeft={0}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 120,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={620}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 70,
                            "left": 120,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "top": 0,
                            "width": 620,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 70,
                              "maxHeight": 70,
                              "maxWidth": 480,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 480,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-0"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CI
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={1}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-1"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 120,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CII
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={2}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-2"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 240,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CIII
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={3}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-3"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 360,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span />
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={4}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </div>
                  <div
                    style={
                      Object {
                        "height": 230,
                        "overflow": "visible",
                        "position": "relative",
                        "width": 740,
                      }
                    }
                  >
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={1}
                      columnWidth={120}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={230}
                      isDataInitialized={true}
                      isDataLoading={true}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollTop={0}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={120}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 230,
                            "left": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "width": 120,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 40,
                              "maxHeight": 40,
                              "maxWidth": 120,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 120,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-cell"
                            key="0-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            teacher-001
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell"
                            key="1-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            teacher-002
                          </div>
                        </div>
                      </div>
                    </Grid>
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={4}
                      columnWidth={[Function]}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={230}
                      isDataInitialized={true}
                      isDataLoading={true}
                      isolateTab={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollLeft={0}
                      scrollToAlignment="auto"
                      scrollToColumn={-2}
                      scrollToRow={-2}
                      scrollTop={0}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 120,
                          "position": "absolute",
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={0}
                      width={620}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 230,
                            "left": 120,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "width": 620,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 40,
                              "maxHeight": 40,
                              "maxWidth": 480,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 480,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={1}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-1"
                            style={
                              Object {
                                "height": 20,
                                "left": 120,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={2}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-2"
                            style={
                              Object {
                                "height": 20,
                                "left": 240,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={3}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-3"
                            style={
                              Object {
                                "height": 20,
                                "left": 360,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={4}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={1}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-1"
                            style={
                              Object {
                                "height": 20,
                                "left": 120,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={2}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-2"
                            style={
                              Object {
                                "height": 20,
                                "left": 240,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={3}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-3"
                            style={
                              Object {
                                "height": 20,
                                "left": 360,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={4}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </div>
                </div>
              </MultiGrid>
            </SAMGrid>
          </div>
          <SAMGrid
            cellRenderer={[Function]}
            className="teacher-enrollment__grid-footer"
            columnCount={4}
            columnWidth={120}
            fixedColumnCount={1}
            fixedRowCount={0}
            footers={
              Array [
                "footer",
                1,
                2,
                3,
              ]
            }
            gridList={
              Array [
                Array [
                  "header-row",
                  Object {
                    "id": "CDX_CI",
                    "label": "CDX CI",
                  },
                  Object {
                    "id": "CDX_CII",
                    "label": "CDX CII",
                  },
                  Object {
                    "id": "CDX_CIII",
                    "label": "CDX CIII",
                  },
                ],
                Array [
                  "teacher-001",
                  true,
                  true,
                  true,
                ],
                Array [
                  "teacher-002",
                  false,
                  false,
                  false,
                ],
              ]
            }
            handleStudentViewToggle={[Function]}
            handleTabIsolate={[Function]}
            handleTabReset={[Function]}
            handleToggle={[Function]}
            headers={
              Array [
                "header",
                "CDX_CI",
                "CDX_CII",
                "CDX_CIII",
              ]
            }
            height={40}
            isDataInitialized={true}
            isDataLoading={true}
            isolateTab={false}
            onScroll={[Function]}
            paginationData={
              Object {
                "itemCount": 0,
              }
            }
            rowCount={1}
            rowHeight={[Function]}
            rowWidth={100}
            smartBarSelections={
              Immutable.Map {
                selectedCohType: "DistrictAdmin",
              }
            }
            studentEnrollRequest={[Function]}
            studentEnrollSaveRequest={[Function]}
            studentViewEnrollSaveRequest={[Function]}
            width={740}
          >
            <MultiGrid
              cellRenderer={[Function]}
              className="teacher-enrollment__grid-footer"
              classNameBottomLeftGrid=""
              classNameBottomRightGrid=""
              classNameTopLeftGrid=""
              classNameTopRightGrid=""
              columnCount={4}
              columnWidth={120}
              enableFixedColumnScroll={false}
              enableFixedRowScroll={false}
              fixedColumnCount={1}
              fixedRowCount={0}
              footers={
                Array [
                  "footer",
                  1,
                  2,
                  3,
                ]
              }
              gridList={
                Array [
                  Array [
                    "header-row",
                    Object {
                      "id": "CDX_CI",
                      "label": "CDX CI",
                    },
                    Object {
                      "id": "CDX_CII",
                      "label": "CDX CII",
                    },
                    Object {
                      "id": "CDX_CIII",
                      "label": "CDX CIII",
                    },
                  ],
                  Array [
                    "teacher-001",
                    true,
                    true,
                    true,
                  ],
                  Array [
                    "teacher-002",
                    false,
                    false,
                    false,
                  ],
                ]
              }
              handleStudentViewToggle={[Function]}
              handleTabIsolate={[Function]}
              handleTabReset={[Function]}
              handleToggle={[Function]}
              headers={
                Array [
                  "header",
                  "CDX_CI",
                  "CDX_CII",
                  "CDX_CIII",
                ]
              }
              height={40}
              isDataInitialized={true}
              isDataLoading={true}
              isolateTab={false}
              onScroll={[Function]}
              paginationData={
                Object {
                  "itemCount": 0,
                }
              }
              rowCount={1}
              rowHeight={[Function]}
              rowWidth={100}
              scrollToColumn={-1}
              scrollToRow={-1}
              smartBarSelections={
                Immutable.Map {
                  selectedCohType: "DistrictAdmin",
                }
              }
              studentEnrollRequest={[Function]}
              studentEnrollSaveRequest={[Function]}
              studentViewEnrollSaveRequest={[Function]}
              style={Object {}}
              styleBottomLeftGrid={Object {}}
              styleBottomRightGrid={Object {}}
              styleTopLeftGrid={Object {}}
              styleTopRightGrid={Object {}}
              width={740}
            >
              <div
                style={
                  Object {
                    "height": 40,
                    "overflow": "visible",
                    "width": 740,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "height": 0,
                      "position": "relative",
                      "width": 740,
                    }
                  }
                />
                <div
                  style={
                    Object {
                      "height": 40,
                      "overflow": "visible",
                      "position": "relative",
                      "width": 740,
                    }
                  }
                >
                  <Grid
                    aria-label="grid"
                    aria-readonly={true}
                    autoContainerWidth={false}
                    autoHeight={false}
                    autoWidth={false}
                    cellRangeRenderer={[Function]}
                    cellRenderer={[Function]}
                    className=""
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={1}
                    columnWidth={120}
                    containerRole="rowgroup"
                    containerStyle={Object {}}
                    enableFixedColumnScroll={false}
                    enableFixedRowScroll={false}
                    estimatedColumnSize={100}
                    estimatedRowSize={30}
                    fixedColumnCount={1}
                    fixedRowCount={0}
                    footers={
                      Array [
                        "footer",
                        1,
                        2,
                        3,
                      ]
                    }
                    getScrollbarSize={[Function]}
                    gridList={
                      Array [
                        Array [
                          "header-row",
                          Object {
                            "id": "CDX_CI",
                            "label": "CDX CI",
                          },
                          Object {
                            "id": "CDX_CII",
                            "label": "CDX CII",
                          },
                          Object {
                            "id": "CDX_CIII",
                            "label": "CDX CIII",
                          },
                        ],
                        Array [
                          "teacher-001",
                          true,
                          true,
                          true,
                        ],
                        Array [
                          "teacher-002",
                          false,
                          false,
                          false,
                        ],
                      ]
                    }
                    handleStudentViewToggle={[Function]}
                    handleTabIsolate={[Function]}
                    handleTabReset={[Function]}
                    handleToggle={[Function]}
                    headers={
                      Array [
                        "header",
                        "CDX_CI",
                        "CDX_CII",
                        "CDX_CIII",
                      ]
                    }
                    height={40}
                    isDataInitialized={true}
                    isDataLoading={true}
                    isolateTab={false}
                    noContentRenderer={[Function]}
                    onScroll={[Function]}
                    onScrollbarPresenceChange={[Function]}
                    onSectionRendered={[Function]}
                    overscanColumnCount={0}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    paginationData={
                      Object {
                        "itemCount": 0,
                      }
                    }
                    role="grid"
                    rowCount={1}
                    rowHeight={[Function]}
                    rowWidth={100}
                    scrollToAlignment="auto"
                    scrollToColumn={-1}
                    scrollToRow={-1}
                    scrollTop={0}
                    scrollingResetTimeInterval={150}
                    smartBarSelections={
                      Immutable.Map {
                        selectedCohType: "DistrictAdmin",
                      }
                    }
                    studentEnrollRequest={[Function]}
                    studentEnrollSaveRequest={[Function]}
                    studentViewEnrollSaveRequest={[Function]}
                    style={
                      Object {
                        "left": 0,
                        "overflowX": "hidden",
                        "overflowY": "hidden",
                        "position": "absolute",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    tabIndex={null}
                    width={120}
                  >
                    <div
                      aria-label="grid"
                      aria-readonly={true}
                      className="ReactVirtualized__Grid"
                      onScroll={[Function]}
                      role="grid"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "boxSizing": "border-box",
                          "direction": "ltr",
                          "height": 40,
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "width": 120,
                          "willChange": "transform",
                        }
                      }
                      tabIndex={null}
                    >
                      <div
                        className="ReactVirtualized__Grid__innerScrollContainer"
                        role="rowgroup"
                        style={
                          Object {
                            "height": 20,
                            "maxHeight": 20,
                            "maxWidth": 120,
                            "overflow": "hidden",
                            "pointerEvents": "",
                            "position": "relative",
                            "width": 120,
                          }
                        }
                      >
                        <div
                          className="teacher-enrollment__grid-footer-cell  "
                          key="0-0"
                          style={
                            Object {
                              "height": 20,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          footer
                        </div>
                      </div>
                    </div>
                  </Grid>
                  <Grid
                    aria-label="grid"
                    aria-readonly={true}
                    autoContainerWidth={false}
                    autoHeight={false}
                    autoWidth={false}
                    cellRangeRenderer={[Function]}
                    cellRenderer={[Function]}
                    className=""
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={3}
                    columnWidth={[Function]}
                    containerRole="rowgroup"
                    containerStyle={Object {}}
                    enableFixedColumnScroll={false}
                    enableFixedRowScroll={false}
                    estimatedColumnSize={100}
                    estimatedRowSize={30}
                    fixedColumnCount={1}
                    fixedRowCount={0}
                    footers={
                      Array [
                        "footer",
                        1,
                        2,
                        3,
                      ]
                    }
                    getScrollbarSize={[Function]}
                    gridList={
                      Array [
                        Array [
                          "header-row",
                          Object {
                            "id": "CDX_CI",
                            "label": "CDX CI",
                          },
                          Object {
                            "id": "CDX_CII",
                            "label": "CDX CII",
                          },
                          Object {
                            "id": "CDX_CIII",
                            "label": "CDX CIII",
                          },
                        ],
                        Array [
                          "teacher-001",
                          true,
                          true,
                          true,
                        ],
                        Array [
                          "teacher-002",
                          false,
                          false,
                          false,
                        ],
                      ]
                    }
                    handleStudentViewToggle={[Function]}
                    handleTabIsolate={[Function]}
                    handleTabReset={[Function]}
                    handleToggle={[Function]}
                    headers={
                      Array [
                        "header",
                        "CDX_CI",
                        "CDX_CII",
                        "CDX_CIII",
                      ]
                    }
                    height={40}
                    isDataInitialized={true}
                    isDataLoading={true}
                    isolateTab={false}
                    noContentRenderer={[Function]}
                    onScroll={[Function]}
                    onScrollbarPresenceChange={[Function]}
                    onSectionRendered={[Function]}
                    overscanColumnCount={0}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    paginationData={
                      Object {
                        "itemCount": 0,
                      }
                    }
                    role="grid"
                    rowCount={1}
                    rowHeight={[Function]}
                    rowWidth={100}
                    scrollLeft={0}
                    scrollToAlignment="auto"
                    scrollToColumn={-2}
                    scrollToRow={-1}
                    scrollTop={0}
                    scrollingResetTimeInterval={150}
                    smartBarSelections={
                      Immutable.Map {
                        selectedCohType: "DistrictAdmin",
                      }
                    }
                    studentEnrollRequest={[Function]}
                    studentEnrollSaveRequest={[Function]}
                    studentViewEnrollSaveRequest={[Function]}
                    style={
                      Object {
                        "left": 120,
                        "position": "absolute",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    tabIndex={0}
                    width={620}
                  >
                    <div
                      aria-label="grid"
                      aria-readonly={true}
                      className="ReactVirtualized__Grid"
                      onScroll={[Function]}
                      role="grid"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "boxSizing": "border-box",
                          "direction": "ltr",
                          "height": 40,
                          "left": 120,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "width": 620,
                          "willChange": "transform",
                        }
                      }
                      tabIndex={0}
                    >
                      <div
                        className="ReactVirtualized__Grid__innerScrollContainer"
                        role="rowgroup"
                        style={
                          Object {
                            "height": 20,
                            "maxHeight": 20,
                            "maxWidth": 360,
                            "overflow": "hidden",
                            "pointerEvents": "",
                            "position": "relative",
                            "width": 360,
                          }
                        }
                      >
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-0"
                          style={
                            Object {
                              "height": 20,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          1
                        </div>
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-1"
                          style={
                            Object {
                              "height": 20,
                              "left": 120,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          2
                        </div>
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-2"
                          style={
                            Object {
                              "height": 20,
                              "left": 240,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          3
                        </div>
                      </div>
                    </div>
                  </Grid>
                </div>
              </div>
            </MultiGrid>
          </SAMGrid>
        </div>
      </ScrollSync>
      <div
        className="student-enrollment-footer"
      >
        <div
          className="student-enrollment-footer__buttons"
        >
          <mockConstructor
            buttonClassModifier="student-enrollment-cancel__btn"
            to="/roster"
          >
            <div />
          </mockConstructor>
        </div>
        <div
          className="student-enrollment__pagination"
        >
           
          <div
            className="teacher-enrollment__item-accumulator"
          >
            Items 1 through 0 of 0
          </div>
          <a
            activePage={1}
            firstPageText="first"
            getPageUrl={[Function]}
            hideFirstLastPages={false}
            innerClass="pagination"
            itemClass="disabled"
            itemsCountPerPage={500}
            lastPageText="last"
            nextPageText="next"
            onChange={[Function]}
            pageRangeDisplayed={3}
            prevPageText="prev"
            totalItemsCount={0}
          >
            <ul
              className="pagination"
            >
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass="disabled"
                key="first"
                linkClass=""
                onClick={[Function]}
                pageNumber={1}
                pageText="first"
              >
                <li
                  className="disabled disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    first
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass="disabled"
                key="prev-1"
                linkClass=""
                onClick={[Function]}
                pageNumber={-1}
                pageText="prev"
              >
                <li
                  className="disabled disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    prev
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass="disabled"
                key="next1"
                linkClass=""
                onClick={[Function]}
                pageNumber={1}
                pageText="next"
              >
                <li
                  className="disabled disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    next
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass="disabled"
                key="last"
                linkClass=""
                onClick={[Function]}
                pageNumber={0}
                pageText="last"
              >
                <li
                  className="disabled disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    last
                  </a>
                </li>
              </t>
            </ul>
          </a>
        </div>
      </div>
    </div>
  </div>
</StudentEnrollmentTable>
`;

exports[`<StudentEnrollmentTable /> Expect to render correctly when tab isolated 1`] = `
<StudentEnrollmentTable
  footers={
    Array [
      "footer",
      1,
      2,
      3,
    ]
  }
  gridList={
    Array [
      Array [
        "header-row",
        Object {
          "id": "CDX_CI",
          "label": "CDX CI",
        },
        Object {
          "id": "CDX_CII",
          "label": "CDX CII",
        },
        Object {
          "id": "CDX_CIII",
          "label": "CDX CIII",
        },
      ],
      Array [
        "teacher-001",
        true,
        true,
        true,
      ],
      Array [
        "teacher-002",
        false,
        false,
        false,
      ],
    ]
  }
  handleStudentViewToggle={[Function]}
  handleTabIsolate={[Function]}
  handleTabReset={[Function]}
  handleToggle={[Function]}
  headers={
    Array [
      "header",
      "CDX_CI",
      "CDX_CII",
      "CDX_CIII",
    ]
  }
  isDataInitialized={false}
  isDataLoading={false}
  isolateTab={true}
  paginationData={
    Object {
      "itemCount": 0,
    }
  }
  smartBarSelections={
    Immutable.Map {
      selectedCohType: "DistrictAdmin",
    }
  }
  studentEnrollRequest={[Function]}
  studentEnrollSaveRequest={[Function]}
  studentViewEnrollSaveRequest={[Function]}
>
  <div>
    <div
      className="teacher-enrollment "
    >
      <div
        className="teacher-enrollment-header"
      >
        Use the check boxes to enroll or unenroll students in HMH programs. Use the check box at the top of each column to enroll all students in that program.
      </div>
      <ScrollSync>
        <div
          className="teacher-enrollment__grid"
        >
          <div
            className="teacher-enrollment__grid-body"
            onChange={[Function]}
          >
            <SAMGrid
              cellRenderer={[Function]}
              className="teacher-enrollment__grid"
              columnCount={5}
              columnWidth={120}
              fixedColumnCount={1}
              fixedRowCount={1}
              footers={
                Array [
                  "footer",
                  1,
                  2,
                  3,
                ]
              }
              gridList={
                Array [
                  Array [
                    "header-row",
                    Object {
                      "id": "CDX_CI",
                      "label": "CDX CI",
                    },
                    Object {
                      "id": "CDX_CII",
                      "label": "CDX CII",
                    },
                    Object {
                      "id": "CDX_CIII",
                      "label": "CDX CIII",
                    },
                  ],
                  Array [
                    "teacher-001",
                    true,
                    true,
                    true,
                  ],
                  Array [
                    "teacher-002",
                    false,
                    false,
                    false,
                  ],
                ]
              }
              handleStudentViewToggle={[Function]}
              handleTabIsolate={[Function]}
              handleTabReset={[Function]}
              handleToggle={[Function]}
              headers={
                Array [
                  "header",
                  "CDX_CI",
                  "CDX_CII",
                  "CDX_CIII",
                ]
              }
              height={300}
              isDataInitialized={false}
              isDataLoading={false}
              isolateTab={true}
              key="data-pg-1"
              paginationData={
                Object {
                  "itemCount": 0,
                }
              }
              rowCount={3}
              rowHeight={[Function]}
              rowWidth={100}
              scrollLeft={0}
              smartBarSelections={
                Immutable.Map {
                  selectedCohType: "DistrictAdmin",
                }
              }
              studentEnrollRequest={[Function]}
              studentEnrollSaveRequest={[Function]}
              studentViewEnrollSaveRequest={[Function]}
              width={740}
            >
              <MultiGrid
                cellRenderer={[Function]}
                className="teacher-enrollment__grid"
                classNameBottomLeftGrid=""
                classNameBottomRightGrid=""
                classNameTopLeftGrid=""
                classNameTopRightGrid=""
                columnCount={5}
                columnWidth={120}
                enableFixedColumnScroll={false}
                enableFixedRowScroll={false}
                fixedColumnCount={1}
                fixedRowCount={1}
                footers={
                  Array [
                    "footer",
                    1,
                    2,
                    3,
                  ]
                }
                gridList={
                  Array [
                    Array [
                      "header-row",
                      Object {
                        "id": "CDX_CI",
                        "label": "CDX CI",
                      },
                      Object {
                        "id": "CDX_CII",
                        "label": "CDX CII",
                      },
                      Object {
                        "id": "CDX_CIII",
                        "label": "CDX CIII",
                      },
                    ],
                    Array [
                      "teacher-001",
                      true,
                      true,
                      true,
                    ],
                    Array [
                      "teacher-002",
                      false,
                      false,
                      false,
                    ],
                  ]
                }
                handleStudentViewToggle={[Function]}
                handleTabIsolate={[Function]}
                handleTabReset={[Function]}
                handleToggle={[Function]}
                headers={
                  Array [
                    "header",
                    "CDX_CI",
                    "CDX_CII",
                    "CDX_CIII",
                  ]
                }
                height={300}
                isDataInitialized={false}
                isDataLoading={false}
                isolateTab={true}
                paginationData={
                  Object {
                    "itemCount": 0,
                  }
                }
                rowCount={3}
                rowHeight={[Function]}
                rowWidth={100}
                scrollLeft={0}
                scrollToColumn={-1}
                scrollToRow={-1}
                smartBarSelections={
                  Immutable.Map {
                    selectedCohType: "DistrictAdmin",
                  }
                }
                studentEnrollRequest={[Function]}
                studentEnrollSaveRequest={[Function]}
                studentViewEnrollSaveRequest={[Function]}
                style={Object {}}
                styleBottomLeftGrid={Object {}}
                styleBottomRightGrid={Object {}}
                styleTopLeftGrid={Object {}}
                styleTopRightGrid={Object {}}
                width={740}
              >
                <div
                  style={
                    Object {
                      "height": 300,
                      "overflow": "visible",
                      "width": 740,
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "height": 70,
                        "position": "relative",
                        "width": 740,
                      }
                    }
                  >
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={1}
                      columnWidth={120}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={70}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={true}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={120}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 70,
                            "left": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "top": 0,
                            "width": 120,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 70,
                              "maxHeight": 70,
                              "maxWidth": 120,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 120,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-header teacher-enrollment__grid-header--selected"
                            key="0-0"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            header-row
                          </div>
                        </div>
                      </div>
                    </Grid>
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={4}
                      columnWidth={[Function]}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={70}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={true}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={1}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollLeft={0}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 120,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "top": 0,
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={620}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 70,
                            "left": 120,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "top": 0,
                            "width": 620,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 70,
                              "maxHeight": 70,
                              "maxWidth": 480,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 480,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-0"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CI
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={1}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-1"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 120,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CII
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={2}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-2"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 240,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span>
                                    CDX CIII
                                  </span>
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={3}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            className="teacher-enrollment__grid-header "
                            key="0-3"
                            role="gridcell"
                            style={
                              Object {
                                "alignSelf": "center",
                                "display": "flex",
                                "height": 70,
                                "left": 360,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <div>
                                <div
                                  className="teacher-enrollment__grid-header-title "
                                >
                                  <span />
                                </div>
                                <div
                                  className="teacher-enrollment__grid-input"
                                >
                                  <input
                                    checked={false}
                                    data-column={4}
                                    data-header={true}
                                    data-row={0}
                                    readOnly={true}
                                    type="checkbox"
                                    value={false}
                                  />
                                   
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </div>
                  <div
                    style={
                      Object {
                        "height": 230,
                        "overflow": "visible",
                        "position": "relative",
                        "width": 740,
                      }
                    }
                  >
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={1}
                      columnWidth={120}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={230}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={true}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollToAlignment="auto"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollTop={0}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={null}
                      width={120}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 230,
                            "left": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "width": 120,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={null}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 40,
                              "maxHeight": 40,
                              "maxWidth": 120,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 120,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-cell"
                            key="0-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            teacher-001
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell"
                            key="1-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            teacher-002
                          </div>
                        </div>
                      </div>
                    </Grid>
                    <Grid
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      className=""
                      classNameBottomLeftGrid=""
                      classNameBottomRightGrid=""
                      classNameTopLeftGrid=""
                      classNameTopRightGrid=""
                      columnCount={4}
                      columnWidth={[Function]}
                      containerRole="rowgroup"
                      containerStyle={Object {}}
                      enableFixedColumnScroll={false}
                      enableFixedRowScroll={false}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      fixedColumnCount={1}
                      fixedRowCount={1}
                      footers={
                        Array [
                          "footer",
                          1,
                          2,
                          3,
                        ]
                      }
                      getScrollbarSize={[Function]}
                      gridList={
                        Array [
                          Array [
                            "header-row",
                            Object {
                              "id": "CDX_CI",
                              "label": "CDX CI",
                            },
                            Object {
                              "id": "CDX_CII",
                              "label": "CDX CII",
                            },
                            Object {
                              "id": "CDX_CIII",
                              "label": "CDX CIII",
                            },
                          ],
                          Array [
                            "teacher-001",
                            true,
                            true,
                            true,
                          ],
                          Array [
                            "teacher-002",
                            false,
                            false,
                            false,
                          ],
                        ]
                      }
                      handleStudentViewToggle={[Function]}
                      handleTabIsolate={[Function]}
                      handleTabReset={[Function]}
                      handleToggle={[Function]}
                      headers={
                        Array [
                          "header",
                          "CDX_CI",
                          "CDX_CII",
                          "CDX_CIII",
                        ]
                      }
                      height={230}
                      isDataInitialized={false}
                      isDataLoading={false}
                      isolateTab={true}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={0}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={10}
                      paginationData={
                        Object {
                          "itemCount": 0,
                        }
                      }
                      role="grid"
                      rowCount={2}
                      rowHeight={[Function]}
                      rowWidth={100}
                      scrollLeft={0}
                      scrollToAlignment="auto"
                      scrollToColumn={-2}
                      scrollToRow={-2}
                      scrollTop={0}
                      scrollingResetTimeInterval={150}
                      smartBarSelections={
                        Immutable.Map {
                          selectedCohType: "DistrictAdmin",
                        }
                      }
                      studentEnrollRequest={[Function]}
                      studentEnrollSaveRequest={[Function]}
                      studentViewEnrollSaveRequest={[Function]}
                      style={
                        Object {
                          "left": 120,
                          "position": "absolute",
                        }
                      }
                      styleBottomLeftGrid={Object {}}
                      styleBottomRightGrid={Object {}}
                      styleTopLeftGrid={Object {}}
                      styleTopRightGrid={Object {}}
                      tabIndex={0}
                      width={620}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="grid"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 230,
                            "left": 120,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "absolute",
                            "width": 620,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="ReactVirtualized__Grid__innerScrollContainer"
                          role="rowgroup"
                          style={
                            Object {
                              "height": 40,
                              "maxHeight": 40,
                              "maxWidth": 480,
                              "overflow": "hidden",
                              "pointerEvents": "",
                              "position": "relative",
                              "width": 480,
                            }
                          }
                        >
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={1}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-1"
                            style={
                              Object {
                                "height": 20,
                                "left": 120,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={2}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-2"
                            style={
                              Object {
                                "height": 20,
                                "left": 240,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={3}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="0-3"
                            style={
                              Object {
                                "height": 20,
                                "left": 360,
                                "position": "absolute",
                                "top": 0,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={4}
                              data-row={1}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-0"
                            style={
                              Object {
                                "height": 20,
                                "left": 0,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={1}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-1"
                            style={
                              Object {
                                "height": 20,
                                "left": 120,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={2}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-2"
                            style={
                              Object {
                                "height": 20,
                                "left": 240,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={3}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                          <div
                            className="teacher-enrollment__grid-cell teacher-enrollment__grid-tally"
                            key="1-3"
                            style={
                              Object {
                                "height": 20,
                                "left": 360,
                                "position": "absolute",
                                "top": 20,
                                "width": 120,
                              }
                            }
                          >
                            <input
                              checked={false}
                              data-column={4}
                              data-row={2}
                              readOnly={true}
                              type="checkbox"
                              value={false}
                            />
                          </div>
                        </div>
                      </div>
                    </Grid>
                  </div>
                </div>
              </MultiGrid>
            </SAMGrid>
          </div>
          <SAMGrid
            cellRenderer={[Function]}
            className="teacher-enrollment__grid-footer"
            columnCount={4}
            columnWidth={120}
            fixedColumnCount={1}
            fixedRowCount={0}
            footers={
              Array [
                "footer",
                1,
                2,
                3,
              ]
            }
            gridList={
              Array [
                Array [
                  "header-row",
                  Object {
                    "id": "CDX_CI",
                    "label": "CDX CI",
                  },
                  Object {
                    "id": "CDX_CII",
                    "label": "CDX CII",
                  },
                  Object {
                    "id": "CDX_CIII",
                    "label": "CDX CIII",
                  },
                ],
                Array [
                  "teacher-001",
                  true,
                  true,
                  true,
                ],
                Array [
                  "teacher-002",
                  false,
                  false,
                  false,
                ],
              ]
            }
            handleStudentViewToggle={[Function]}
            handleTabIsolate={[Function]}
            handleTabReset={[Function]}
            handleToggle={[Function]}
            headers={
              Array [
                "header",
                "CDX_CI",
                "CDX_CII",
                "CDX_CIII",
              ]
            }
            height={40}
            isDataInitialized={false}
            isDataLoading={false}
            isolateTab={true}
            onScroll={[Function]}
            paginationData={
              Object {
                "itemCount": 0,
              }
            }
            rowCount={1}
            rowHeight={[Function]}
            rowWidth={100}
            smartBarSelections={
              Immutable.Map {
                selectedCohType: "DistrictAdmin",
              }
            }
            studentEnrollRequest={[Function]}
            studentEnrollSaveRequest={[Function]}
            studentViewEnrollSaveRequest={[Function]}
            width={740}
          >
            <MultiGrid
              cellRenderer={[Function]}
              className="teacher-enrollment__grid-footer"
              classNameBottomLeftGrid=""
              classNameBottomRightGrid=""
              classNameTopLeftGrid=""
              classNameTopRightGrid=""
              columnCount={4}
              columnWidth={120}
              enableFixedColumnScroll={false}
              enableFixedRowScroll={false}
              fixedColumnCount={1}
              fixedRowCount={0}
              footers={
                Array [
                  "footer",
                  1,
                  2,
                  3,
                ]
              }
              gridList={
                Array [
                  Array [
                    "header-row",
                    Object {
                      "id": "CDX_CI",
                      "label": "CDX CI",
                    },
                    Object {
                      "id": "CDX_CII",
                      "label": "CDX CII",
                    },
                    Object {
                      "id": "CDX_CIII",
                      "label": "CDX CIII",
                    },
                  ],
                  Array [
                    "teacher-001",
                    true,
                    true,
                    true,
                  ],
                  Array [
                    "teacher-002",
                    false,
                    false,
                    false,
                  ],
                ]
              }
              handleStudentViewToggle={[Function]}
              handleTabIsolate={[Function]}
              handleTabReset={[Function]}
              handleToggle={[Function]}
              headers={
                Array [
                  "header",
                  "CDX_CI",
                  "CDX_CII",
                  "CDX_CIII",
                ]
              }
              height={40}
              isDataInitialized={false}
              isDataLoading={false}
              isolateTab={true}
              onScroll={[Function]}
              paginationData={
                Object {
                  "itemCount": 0,
                }
              }
              rowCount={1}
              rowHeight={[Function]}
              rowWidth={100}
              scrollToColumn={-1}
              scrollToRow={-1}
              smartBarSelections={
                Immutable.Map {
                  selectedCohType: "DistrictAdmin",
                }
              }
              studentEnrollRequest={[Function]}
              studentEnrollSaveRequest={[Function]}
              studentViewEnrollSaveRequest={[Function]}
              style={Object {}}
              styleBottomLeftGrid={Object {}}
              styleBottomRightGrid={Object {}}
              styleTopLeftGrid={Object {}}
              styleTopRightGrid={Object {}}
              width={740}
            >
              <div
                style={
                  Object {
                    "height": 40,
                    "overflow": "visible",
                    "width": 740,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "height": 0,
                      "position": "relative",
                      "width": 740,
                    }
                  }
                />
                <div
                  style={
                    Object {
                      "height": 40,
                      "overflow": "visible",
                      "position": "relative",
                      "width": 740,
                    }
                  }
                >
                  <Grid
                    aria-label="grid"
                    aria-readonly={true}
                    autoContainerWidth={false}
                    autoHeight={false}
                    autoWidth={false}
                    cellRangeRenderer={[Function]}
                    cellRenderer={[Function]}
                    className=""
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={1}
                    columnWidth={120}
                    containerRole="rowgroup"
                    containerStyle={Object {}}
                    enableFixedColumnScroll={false}
                    enableFixedRowScroll={false}
                    estimatedColumnSize={100}
                    estimatedRowSize={30}
                    fixedColumnCount={1}
                    fixedRowCount={0}
                    footers={
                      Array [
                        "footer",
                        1,
                        2,
                        3,
                      ]
                    }
                    getScrollbarSize={[Function]}
                    gridList={
                      Array [
                        Array [
                          "header-row",
                          Object {
                            "id": "CDX_CI",
                            "label": "CDX CI",
                          },
                          Object {
                            "id": "CDX_CII",
                            "label": "CDX CII",
                          },
                          Object {
                            "id": "CDX_CIII",
                            "label": "CDX CIII",
                          },
                        ],
                        Array [
                          "teacher-001",
                          true,
                          true,
                          true,
                        ],
                        Array [
                          "teacher-002",
                          false,
                          false,
                          false,
                        ],
                      ]
                    }
                    handleStudentViewToggle={[Function]}
                    handleTabIsolate={[Function]}
                    handleTabReset={[Function]}
                    handleToggle={[Function]}
                    headers={
                      Array [
                        "header",
                        "CDX_CI",
                        "CDX_CII",
                        "CDX_CIII",
                      ]
                    }
                    height={40}
                    isDataInitialized={false}
                    isDataLoading={false}
                    isolateTab={true}
                    noContentRenderer={[Function]}
                    onScroll={[Function]}
                    onScrollbarPresenceChange={[Function]}
                    onSectionRendered={[Function]}
                    overscanColumnCount={0}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    paginationData={
                      Object {
                        "itemCount": 0,
                      }
                    }
                    role="grid"
                    rowCount={1}
                    rowHeight={[Function]}
                    rowWidth={100}
                    scrollToAlignment="auto"
                    scrollToColumn={-1}
                    scrollToRow={-1}
                    scrollTop={0}
                    scrollingResetTimeInterval={150}
                    smartBarSelections={
                      Immutable.Map {
                        selectedCohType: "DistrictAdmin",
                      }
                    }
                    studentEnrollRequest={[Function]}
                    studentEnrollSaveRequest={[Function]}
                    studentViewEnrollSaveRequest={[Function]}
                    style={
                      Object {
                        "left": 0,
                        "overflowX": "hidden",
                        "overflowY": "hidden",
                        "position": "absolute",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    tabIndex={null}
                    width={120}
                  >
                    <div
                      aria-label="grid"
                      aria-readonly={true}
                      className="ReactVirtualized__Grid"
                      onScroll={[Function]}
                      role="grid"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "boxSizing": "border-box",
                          "direction": "ltr",
                          "height": 40,
                          "left": 0,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "width": 120,
                          "willChange": "transform",
                        }
                      }
                      tabIndex={null}
                    >
                      <div
                        className="ReactVirtualized__Grid__innerScrollContainer"
                        role="rowgroup"
                        style={
                          Object {
                            "height": 20,
                            "maxHeight": 20,
                            "maxWidth": 120,
                            "overflow": "hidden",
                            "pointerEvents": "",
                            "position": "relative",
                            "width": 120,
                          }
                        }
                      >
                        <div
                          className="teacher-enrollment__grid-footer-cell  "
                          key="0-0"
                          style={
                            Object {
                              "height": 20,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          footer
                        </div>
                      </div>
                    </div>
                  </Grid>
                  <Grid
                    aria-label="grid"
                    aria-readonly={true}
                    autoContainerWidth={false}
                    autoHeight={false}
                    autoWidth={false}
                    cellRangeRenderer={[Function]}
                    cellRenderer={[Function]}
                    className=""
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={3}
                    columnWidth={[Function]}
                    containerRole="rowgroup"
                    containerStyle={Object {}}
                    enableFixedColumnScroll={false}
                    enableFixedRowScroll={false}
                    estimatedColumnSize={100}
                    estimatedRowSize={30}
                    fixedColumnCount={1}
                    fixedRowCount={0}
                    footers={
                      Array [
                        "footer",
                        1,
                        2,
                        3,
                      ]
                    }
                    getScrollbarSize={[Function]}
                    gridList={
                      Array [
                        Array [
                          "header-row",
                          Object {
                            "id": "CDX_CI",
                            "label": "CDX CI",
                          },
                          Object {
                            "id": "CDX_CII",
                            "label": "CDX CII",
                          },
                          Object {
                            "id": "CDX_CIII",
                            "label": "CDX CIII",
                          },
                        ],
                        Array [
                          "teacher-001",
                          true,
                          true,
                          true,
                        ],
                        Array [
                          "teacher-002",
                          false,
                          false,
                          false,
                        ],
                      ]
                    }
                    handleStudentViewToggle={[Function]}
                    handleTabIsolate={[Function]}
                    handleTabReset={[Function]}
                    handleToggle={[Function]}
                    headers={
                      Array [
                        "header",
                        "CDX_CI",
                        "CDX_CII",
                        "CDX_CIII",
                      ]
                    }
                    height={40}
                    isDataInitialized={false}
                    isDataLoading={false}
                    isolateTab={true}
                    noContentRenderer={[Function]}
                    onScroll={[Function]}
                    onScrollbarPresenceChange={[Function]}
                    onSectionRendered={[Function]}
                    overscanColumnCount={0}
                    overscanIndicesGetter={[Function]}
                    overscanRowCount={10}
                    paginationData={
                      Object {
                        "itemCount": 0,
                      }
                    }
                    role="grid"
                    rowCount={1}
                    rowHeight={[Function]}
                    rowWidth={100}
                    scrollLeft={0}
                    scrollToAlignment="auto"
                    scrollToColumn={-2}
                    scrollToRow={-1}
                    scrollTop={0}
                    scrollingResetTimeInterval={150}
                    smartBarSelections={
                      Immutable.Map {
                        selectedCohType: "DistrictAdmin",
                      }
                    }
                    studentEnrollRequest={[Function]}
                    studentEnrollSaveRequest={[Function]}
                    studentViewEnrollSaveRequest={[Function]}
                    style={
                      Object {
                        "left": 120,
                        "position": "absolute",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    tabIndex={0}
                    width={620}
                  >
                    <div
                      aria-label="grid"
                      aria-readonly={true}
                      className="ReactVirtualized__Grid"
                      onScroll={[Function]}
                      role="grid"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "boxSizing": "border-box",
                          "direction": "ltr",
                          "height": 40,
                          "left": 120,
                          "overflowX": "hidden",
                          "overflowY": "hidden",
                          "position": "absolute",
                          "width": 620,
                          "willChange": "transform",
                        }
                      }
                      tabIndex={0}
                    >
                      <div
                        className="ReactVirtualized__Grid__innerScrollContainer"
                        role="rowgroup"
                        style={
                          Object {
                            "height": 20,
                            "maxHeight": 20,
                            "maxWidth": 360,
                            "overflow": "hidden",
                            "pointerEvents": "",
                            "position": "relative",
                            "width": 360,
                          }
                        }
                      >
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-0"
                          style={
                            Object {
                              "height": 20,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          1
                        </div>
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-1"
                          style={
                            Object {
                              "height": 20,
                              "left": 120,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          2
                        </div>
                        <div
                          className="teacher-enrollment__grid-footer-cell teacher-enrollment__grid-footer-tally "
                          key="0-2"
                          style={
                            Object {
                              "height": 20,
                              "left": 240,
                              "position": "absolute",
                              "top": 0,
                              "width": 120,
                            }
                          }
                        >
                          3
                        </div>
                      </div>
                    </div>
                  </Grid>
                </div>
              </div>
            </MultiGrid>
          </SAMGrid>
        </div>
      </ScrollSync>
      <div
        className="student-enrollment-footer"
      >
        <div
          className="student-enrollment-footer__buttons"
        >
          <SAMButton
            buttonClassModifier="student-enrollment-cancel__btn"
            buttonType="button"
            id="cancel"
            isPrimaryButton={false}
          >
            <button
              className="btn btn--secondary student-enrollment-cancel__btn"
              id="cancel"
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </SAMButton>
          <mockConstructor
            buttonClassModifier="student-enrollment-cancel__btn"
            to="/roster"
          >
            <div />
          </mockConstructor>
          <SAMButton
            buttonClassModifier="student-enrollment-cancel__btn"
            buttonType="button"
            isPrimaryButton={true}
            onClickHandler={[Function]}
          >
            <button
              className="btn btn--primary student-enrollment-cancel__btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </SAMButton>
          <SAMButton
            buttonClassModifier="student-enrollment-cancel__btn"
            buttonType="button"
            isPrimaryButton={true}
            onClickHandler={[Function]}
          >
            <button
              className="btn btn--primary student-enrollment-cancel__btn"
              onClick={[Function]}
              type="button"
            >
              Save & Return
            </button>
          </SAMButton>
        </div>
        <div
          className="student-enrollment__pagination"
        >
           
          <div
            className="teacher-enrollment__item-accumulator"
          >
            Items 1 through 0 of 0
          </div>
          <a
            activePage={1}
            firstPageText="first"
            getPageUrl={[Function]}
            hideFirstLastPages={false}
            innerClass="pagination"
            itemClass=""
            itemsCountPerPage={500}
            lastPageText="last"
            nextPageText="next"
            onChange={[Function]}
            pageRangeDisplayed={3}
            prevPageText="prev"
            totalItemsCount={0}
          >
            <ul
              className="pagination"
            >
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="first"
                linkClass=""
                onClick={[Function]}
                pageNumber={1}
                pageText="first"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    first
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="prev-1"
                linkClass=""
                onClick={[Function]}
                pageNumber={-1}
                pageText="prev"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    prev
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="next1"
                linkClass=""
                onClick={[Function]}
                pageNumber={1}
                pageText="next"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    next
                  </a>
                </li>
              </t>
              <t
                activeClass="active"
                disabledClass="disabled"
                href="#"
                isActive={false}
                isDisabled={true}
                itemClass=""
                key="last"
                linkClass=""
                onClick={[Function]}
                pageNumber={0}
                pageText="last"
              >
                <li
                  className="disabled"
                  onClick={[Function]}
                >
                  <a
                    className=""
                    href="#"
                  >
                    last
                  </a>
                </li>
              </t>
            </ul>
          </a>
        </div>
      </div>
    </div>
  </div>
</StudentEnrollmentTable>
`;

exports[`<StudentEnrollmentTable /> Expect to render correctly when tab isolated for students 1`] = `
<StudentEnrollmentTable
  footers={
    Array [
      "footer",
      1,
      2,
      3,
    ]
  }
  gridList={
    Array [
      Array [
        "header-row",
        Object {
          "id": "CDX_CI",
          "label": "CDX CI",
        },
        Object {
          "id": "CDX_CII",
          "label": "CDX CII",
        },
        Object {
          "id": "CDX_CIII",
          "label": "CDX CIII",
        },
      ],
      Array [
        "teacher-001",
        true,
        true,
        true,
      ],
      Array [
        "teacher-002",
        false,
        false,
        false,
      ],
    ]
  }
  handleStudentViewToggle={[Function]}
  handleTabIsolate={[Function]}
  handleTabReset={[Function]}
  handleToggle={[Function]}
  headers={
    Array [
      "header",
      "CDX_CI",
      "CDX_CII",
      "CDX_CIII",
    ]
  }
  isDataInitialized={false}
  isDataLoading={false}
  isolateTab={true}
  paginationData={
    Object {
      "itemCount": 0,
    }
  }
  smartBarSelections={
    Immutable.Map {
      selectedCohType: "Student",
    }
  }
  studentEnrollRequest={[Function]}
  studentEnrollSaveRequest={[Function]}
  studentViewEnrollSaveRequest={[Function]}
>
  <div>
    <div
      className="teacher-enrollment "
    >
      <div
        className="student-enrollment-header"
      >
        Manage Student Enrollment
      </div>
      <div
        className="student-enrollment-header__subset"
      >
        Use the check boxes to enroll or unenroll students in HMH programs.
      </div>
      <div
        className="student-view-container"
      >
        <table
          className="student-view"
        >
          <thead>
            <tr
              className="student-view-header"
            >
              <th
                className="student-view-header__label"
              >
                Enroll this student in the following application(s):
              </th>
            </tr>
          </thead>
          <tbody
            className="student-view-body"
          >
            <tr
              key="0"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={0}
                  id="student-products_0"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_0"
                />
              </td>
            </tr>
            <tr
              key="1"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={1}
                  id="student-products_1"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_1"
                >
                  CDX CI
                </label>
              </td>
            </tr>
            <tr
              key="2"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={2}
                  id="student-products_2"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_2"
                >
                  CDX CII
                </label>
              </td>
            </tr>
            <tr
              key="3"
            >
              <td>
                <input
                  checked={true}
                  className="student-view-input"
                  data-row={3}
                  id="student-products_3"
                  onChange={[Function]}
                  readOnly={true}
                  type="checkbox"
                  value={true}
                />
                <label
                  className="student-view-list"
                  htmlFor="student-products_3"
                >
                  CDX CIII
                </label>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <div
        className="student-enrollment-footer__studentview"
      >
        <div
          className="student-enrollment-footer__buttons"
        >
          <SAMButton
            buttonClassModifier="student-enrollment-cancel__btn"
            buttonType="button"
            id="cancel"
            isPrimaryButton={false}
          >
            <button
              className="btn btn--secondary student-enrollment-cancel__btn"
              id="cancel"
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </SAMButton>
          <mockConstructor
            buttonClassModifier="student-enrollment-cancel__btn"
            to="/roster"
          >
            <div />
          </mockConstructor>
          <SAMButton
            buttonClassModifier="student-enrollment-cancel__btn"
            buttonType="button"
            isPrimaryButton={true}
            onClickHandler={[Function]}
          >
            <button
              className="btn btn--primary student-enrollment-cancel__btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </SAMButton>
          <SAMButton
            buttonClassModifier="student-enrollment-cancel__btn"
            buttonType="button"
            isPrimaryButton={true}
            onClickHandler={[Function]}
          >
            <button
              className="btn btn--primary student-enrollment-cancel__btn"
              onClick={[Function]}
              type="button"
            >
              Save & Return
            </button>
          </SAMButton>
        </div>
      </div>
    </div>
  </div>
</StudentEnrollmentTable>
`;

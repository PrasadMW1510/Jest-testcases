// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ManageAdminAccounts /> Describe table with data Expect to render correctly 1`] = `
<div
  className="roster-content-panel roster-content-panel--white"
>
  <h4
    className="manage-admin-accounts__header-text"
  >
    Manage Administrative Accounts
  </h4>
  <span
    className="manage-admin-accounts__text-direction"
  >
    Click a link to add or edit an account.
  </span>
  <div
    className="manage-admin-accounts__link-container"
  >
    <span
      className="manage-admin-accounts__link-section"
    >
       Add an Account:
    </span>
    <div
      className="manage-admin-accounts__link-section"
    >
      <span
        className="manage-admin-accounts__link"
        onClick={[Function]}
        role="link"
        tabIndex="0"
      >
        School Administrator
      </span>
      <span
        className="manage-admin-accounts__link"
        onClick={[Function]}
        role="link"
        tabIndex="0"
      >
        District Administrator
      </span>
    </div>
    <div
      className="manage-admin-accounts__link-section"
    >
      <span
        className="manage-admin-accounts__link"
        onClick={[Function]}
        role="link"
        tabIndex="0"
      >
        School Technical Adminstrator
      </span>
      <span
        className="manage-admin-accounts__link"
        onClick={[Function]}
        role="link"
        tabIndex="0"
      >
        District Technical Adminstrator
      </span>
    </div>
  </div>
  <SAMTable
    checkedIds={Array []}
    className="manage-admin-accounts-table"
    columns={
      Array [
        Object {
          "Cell": [Function],
          "Header": [Function],
          "accessor": "name",
          "id": "name",
          "width": 260,
        },
        Object {
          "Header": "District User Id",
          "accessor": "district_user_id",
          "width": 260,
        },
        Object {
          "Header": "Type",
          "accessor": "type",
          "width": 120,
        },
        Object {
          "Cell": [Function],
          "Header": "",
          "sortable": false,
          "width": 100,
        },
      ]
    }
    data={
      Array [
        Object {
          "_id": "mockuserId",
          "district_user_id": "mockDistrictId",
          "name": "user, sch",
          "remove": true,
          "type": "district Admin",
          "user_id": "mockuserId",
        },
      ]
    }
    pageSize={1}
    renderEmptyTable={[Function]}
    selectAll={false}
    sortable={true}
  />
</div>
`;

exports[`<ManageAdminAccounts /> Should render correctly with no data 1`] = `
<ManageAdminAccounts
  admins={Array []}
  currentUserId="mock-user-id"
  isDistrictAdmin={true}
  showModal={[Function]}
>
  <div
    className="roster-content-panel roster-content-panel--white"
  >
    <h4
      className="manage-admin-accounts__header-text"
    >
      Manage Administrative Accounts
    </h4>
    <span
      className="manage-admin-accounts__text-direction"
    >
      Click a link to add or edit an account.
    </span>
    <div
      className="manage-admin-accounts__link-container"
    >
      <span
        className="manage-admin-accounts__link-section"
      >
         Add an Account:
      </span>
      <div
        className="manage-admin-accounts__link-section"
      >
        <span
          className="manage-admin-accounts__link"
          onClick={[Function]}
          role="link"
          tabIndex="0"
        >
          School Administrator
        </span>
        <span
          className="manage-admin-accounts__link"
          onClick={[Function]}
          role="link"
          tabIndex="0"
        >
          District Administrator
        </span>
      </div>
      <div
        className="manage-admin-accounts__link-section"
      >
        <span
          className="manage-admin-accounts__link"
          onClick={[Function]}
          role="link"
          tabIndex="0"
        >
          School Technical Adminstrator
        </span>
        <span
          className="manage-admin-accounts__link"
          onClick={[Function]}
          role="link"
          tabIndex="0"
        >
          District Technical Adminstrator
        </span>
      </div>
    </div>
    <SAMTable
      checkedIds={Array []}
      className="manage-admin-accounts-table"
      columns={
        Array [
          Object {
            "Cell": [Function],
            "Header": [Function],
            "accessor": "name",
            "id": "name",
            "width": 260,
          },
          Object {
            "Header": "District User Id",
            "accessor": "district_user_id",
            "width": 260,
          },
          Object {
            "Header": "Type",
            "accessor": "type",
            "width": 120,
          },
          Object {
            "Cell": [Function],
            "Header": "",
            "sortable": false,
            "width": 100,
          },
        ]
      }
      data={Array []}
      pageSize={0}
      renderEmptyTable={[Function]}
      selectAll={false}
      sortable={true}
    >
      <div
        className="manage-admin-accounts-table"
      >
        <ReactTable
          AggregatedComponent={[Function]}
          ExpanderComponent={[Function]}
          FilterComponent={[Function]}
          LoadingComponent={[Function]}
          NoDataComponent={[Function]}
          PadRowComponent={[Function]}
          PaginationComponent={[Function]}
          PivotValueComponent={[Function]}
          ResizerComponent={[Function]}
          TableComponent={[Function]}
          TbodyComponent={[Function]}
          TdComponent={[Function]}
          TfootComponent={[Function]}
          ThComponent={[Function]}
          TheadComponent={[Function]}
          TrComponent={[Function]}
          TrGroupComponent={[Function]}
          aggregatedKey="_aggregated"
          checkedIds={Array []}
          className="manage-admin-accounts-table"
          collapseOnDataChange={true}
          collapseOnPageChange={true}
          collapseOnSortingChange={true}
          column={
            Object {
              "Aggregated": undefined,
              "Cell": undefined,
              "Expander": undefined,
              "Filter": undefined,
              "Footer": undefined,
              "Header": undefined,
              "Pivot": undefined,
              "PivotValue": undefined,
              "aggregate": undefined,
              "className": "",
              "filterAll": false,
              "filterMethod": undefined,
              "filterable": undefined,
              "footerClassName": "",
              "footerStyle": Object {},
              "getFooterProps": [Function],
              "getHeaderProps": [Function],
              "getProps": [Function],
              "headerClassName": "",
              "headerStyle": Object {},
              "minWidth": 100,
              "resizable": undefined,
              "show": true,
              "sortMethod": undefined,
              "sortable": undefined,
              "style": Object {},
            }
          }
          columns={
            Array [
              Object {
                "Cell": [Function],
                "Header": [Function],
                "accessor": "name",
                "id": "name",
                "width": 260,
              },
              Object {
                "Header": "District User Id",
                "accessor": "district_user_id",
                "width": 260,
              },
              Object {
                "Header": "Type",
                "accessor": "type",
                "width": 120,
              },
              Object {
                "Cell": [Function],
                "Header": "",
                "sortable": false,
                "width": 100,
              },
            ]
          }
          data={Array []}
          defaultExpanded={Object {}}
          defaultFilterMethod={[Function]}
          defaultFiltered={Array []}
          defaultPageSize={20}
          defaultResized={Array []}
          defaultSortDesc={false}
          defaultSortMethod={[Function]}
          defaultSorted={Array []}
          expanderDefaults={
            Object {
              "filterable": false,
              "resizable": false,
              "sortable": false,
              "width": 35,
            }
          }
          filterable={false}
          freezeWhenExpanded={false}
          getLoadingProps={[Function]}
          getNoDataProps={[Function]}
          getPaginationProps={[Function]}
          getProps={[Function]}
          getResizerProps={[Function]}
          getTableProps={[Function]}
          getTbodyProps={[Function]}
          getTdProps={[Function]}
          getTfootProps={[Function]}
          getTfootTdProps={[Function]}
          getTfootTrProps={[Function]}
          getTheadFilterProps={[Function]}
          getTheadFilterThProps={[Function]}
          getTheadFilterTrProps={[Function]}
          getTheadGroupProps={[Function]}
          getTheadGroupThProps={[Function]}
          getTheadGroupTrProps={[Function]}
          getTheadProps={[Function]}
          getTheadThProps={[Function]}
          getTheadTrProps={[Function]}
          getTrGroupProps={[Function]}
          getTrProps={[Function]}
          groupedByPivotKey="_groupedByPivot"
          indexKey="_index"
          loading={false}
          loadingText="Loading..."
          multiSort={true}
          nestingLevelKey="_nestingLevel"
          nextText="Next"
          noDataText="No rows found"
          ofText="of"
          onFetchData={[Function]}
          originalKey="_original"
          pageSize={0}
          pageSizeOptions={
            Array [
              5,
              10,
              20,
              25,
              50,
              100,
            ]
          }
          pageText="Page"
          pivotDefaults={Object {}}
          pivotIDKey="_pivotID"
          pivotValKey="_pivotVal"
          previousText="Previous"
          renderEmptyTable={[Function]}
          resizable={false}
          rowsText="rows"
          selectAll={false}
          showPageJump={true}
          showPageSizeOptions={true}
          showPagination={false}
          showPaginationBottom={true}
          showPaginationTop={false}
          sortable={true}
          style={Object {}}
          subRowsKey="_subRows"
        >
          <div
            className="ReactTable manage-admin-accounts-table"
            style={Object {}}
          >
            <Table
              className=""
            >
              <div
                className="rt-table"
              >
                <Thead
                  className="-header"
                  style={
                    Object {
                      "minWidth": "740px",
                    }
                  }
                >
                  <div
                    className="rt-thead -header"
                    style={
                      Object {
                        "minWidth": "740px",
                      }
                    }
                  >
                    <Tr>
                      <div
                        className="rt-tr"
                      >
                        <ThComponent
                          className=" -cursor-pointer"
                          key="0-name"
                          style={
                            Object {
                              "flex": "260 0 auto",
                              "maxWidth": "260px",
                              "width": "260px",
                            }
                          }
                          toggleSort={[Function]}
                        >
                          <div
                            className="rt-th  -cursor-pointer"
                            onClick={[Function]}
                            role="heading"
                            style={
                              Object {
                                "flex": "260 0 auto",
                                "maxWidth": "260px",
                                "width": "260px",
                              }
                            }
                          >
                            <div
                              className=""
                            >
                              <span>
                                Name
                              </span>
                            </div>
                          </div>
                        </ThComponent>
                        <ThComponent
                          className=" -cursor-pointer"
                          key="1-district_user_id"
                          style={
                            Object {
                              "flex": "260 0 auto",
                              "maxWidth": "260px",
                              "width": "260px",
                            }
                          }
                          toggleSort={[Function]}
                        >
                          <div
                            className="rt-th  -cursor-pointer"
                            onClick={[Function]}
                            role="heading"
                            style={
                              Object {
                                "flex": "260 0 auto",
                                "maxWidth": "260px",
                                "width": "260px",
                              }
                            }
                          >
                            <div
                              className=""
                            >
                              District User Id
                            </div>
                          </div>
                        </ThComponent>
                        <ThComponent
                          className=" -cursor-pointer"
                          key="2-type"
                          style={
                            Object {
                              "flex": "120 0 auto",
                              "maxWidth": "120px",
                              "width": "120px",
                            }
                          }
                          toggleSort={[Function]}
                        >
                          <div
                            className="rt-th  -cursor-pointer"
                            onClick={[Function]}
                            role="heading"
                            style={
                              Object {
                                "flex": "120 0 auto",
                                "maxWidth": "120px",
                                "width": "120px",
                              }
                            }
                          >
                            <div
                              className=""
                            >
                              Type
                            </div>
                          </div>
                        </ThComponent>
                        <ThComponent
                          className=""
                          key="3-undefined"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": "100px",
                              "width": "100px",
                            }
                          }
                          toggleSort={[Function]}
                        >
                          <div
                            className="rt-th"
                            onClick={[Function]}
                            role="heading"
                            style={
                              Object {
                                "flex": "100 0 auto",
                                "maxWidth": "100px",
                                "width": "100px",
                              }
                            }
                          >
                            <div
                              className=""
                            />
                          </div>
                        </ThComponent>
                      </div>
                    </Tr>
                  </div>
                </Thead>
                <Component
                  className=""
                  style={
                    Object {
                      "minWidth": "740px",
                    }
                  }
                >
                  <div
                    className="manage-topic-table__no-data"
                  >
                    <div
                      className="manage-topic-table__no-data-text"
                    />
                  </div>
                </Component>
              </div>
            </Table>
            <NoData>
              <div
                className="rt-noData"
              >
                No rows found
              </div>
            </NoData>
            <LoadingComponent
              loading={false}
              loadingText="Loading..."
            >
              <div
                className="-loading"
              >
                <div
                  className="-loading-inner"
                >
                  Loading...
                </div>
              </div>
            </LoadingComponent>
          </div>
        </ReactTable>
      </div>
    </SAMTable>
  </div>
</ManageAdminAccounts>
`;

exports[`<ManageAdminAccounts /> should populate the ManageAdminAccout Table with the right columns 1`] = `
<span>
  Name
</span>
`;

exports[`<ManageAdminAccounts /> should populate the ManageAdminAccout Table with the right columns 2`] = `
<span
  className="manage-admin-accounts__table-link"
  onClick={[Function]}
  role="link"
  tabIndex={0}
>
  Remove
</span>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CustomDemographicList /> Should render correctly with no data 1`] = `
<CustomDemographicList
  demographics={Array []}
  showModal={[Function]}
>
  <SAMTable
    checkedIds={Array []}
    className="custom-demographics-table"
    columns={
      Array [
        Object {
          "Header": "Custom",
          "accessor": "name",
          "id": "name",
          "width": 180,
        },
        Object {
          "Cell": [Function],
          "Header": "",
          "accessor": "edit",
          "width": 100,
        },
        Object {
          "Cell": [Function],
          "Header": "",
          "accessor": "delete",
          "width": 100,
        },
      ]
    }
    data={Array []}
    pageSize={0}
    renderEmptyTable={[Function]}
    selectAll={false}
    sortable={false}
  >
    <div
      className="custom-demographics-table"
    >
      <ReactTable
        AggregatedComponent={[Function]}
        ExpanderComponent={[Function]}
        FilterComponent={[Function]}
        LoadingComponent={[Function]}
        NoDataComponent={[Function]}
        PadRowComponent={[Function]}
        PaginationComponent={[Function]}
        PivotValueComponent={[Function]}
        ResizerComponent={[Function]}
        TableComponent={[Function]}
        TbodyComponent={[Function]}
        TdComponent={[Function]}
        TfootComponent={[Function]}
        ThComponent={[Function]}
        TheadComponent={[Function]}
        TrComponent={[Function]}
        TrGroupComponent={[Function]}
        aggregatedKey="_aggregated"
        checkedIds={Array []}
        className="custom-demographics-table"
        collapseOnDataChange={true}
        collapseOnPageChange={true}
        collapseOnSortingChange={true}
        column={
          Object {
            "Aggregated": undefined,
            "Cell": undefined,
            "Expander": undefined,
            "Filter": undefined,
            "Footer": undefined,
            "Header": undefined,
            "Pivot": undefined,
            "PivotValue": undefined,
            "aggregate": undefined,
            "className": "",
            "filterAll": false,
            "filterMethod": undefined,
            "filterable": undefined,
            "footerClassName": "",
            "footerStyle": Object {},
            "getFooterProps": [Function],
            "getHeaderProps": [Function],
            "getProps": [Function],
            "headerClassName": "",
            "headerStyle": Object {},
            "minWidth": 100,
            "resizable": undefined,
            "show": true,
            "sortMethod": undefined,
            "sortable": undefined,
            "style": Object {},
          }
        }
        columns={
          Array [
            Object {
              "Header": "Custom",
              "accessor": "name",
              "id": "name",
              "width": 180,
            },
            Object {
              "Cell": [Function],
              "Header": "",
              "accessor": "edit",
              "width": 100,
            },
            Object {
              "Cell": [Function],
              "Header": "",
              "accessor": "delete",
              "width": 100,
            },
          ]
        }
        data={Array []}
        defaultExpanded={Object {}}
        defaultFilterMethod={[Function]}
        defaultFiltered={Array []}
        defaultPageSize={20}
        defaultResized={Array []}
        defaultSortDesc={false}
        defaultSortMethod={[Function]}
        defaultSorted={Array []}
        expanderDefaults={
          Object {
            "filterable": false,
            "resizable": false,
            "sortable": false,
            "width": 35,
          }
        }
        filterable={false}
        freezeWhenExpanded={false}
        getLoadingProps={[Function]}
        getNoDataProps={[Function]}
        getPaginationProps={[Function]}
        getProps={[Function]}
        getResizerProps={[Function]}
        getTableProps={[Function]}
        getTbodyProps={[Function]}
        getTdProps={[Function]}
        getTfootProps={[Function]}
        getTfootTdProps={[Function]}
        getTfootTrProps={[Function]}
        getTheadFilterProps={[Function]}
        getTheadFilterThProps={[Function]}
        getTheadFilterTrProps={[Function]}
        getTheadGroupProps={[Function]}
        getTheadGroupThProps={[Function]}
        getTheadGroupTrProps={[Function]}
        getTheadProps={[Function]}
        getTheadThProps={[Function]}
        getTheadTrProps={[Function]}
        getTrGroupProps={[Function]}
        getTrProps={[Function]}
        groupedByPivotKey="_groupedByPivot"
        indexKey="_index"
        loading={false}
        loadingText="Loading..."
        multiSort={true}
        nestingLevelKey="_nestingLevel"
        nextText="Next"
        noDataText="No rows found"
        ofText="of"
        onFetchData={[Function]}
        originalKey="_original"
        pageSize={0}
        pageSizeOptions={
          Array [
            5,
            10,
            20,
            25,
            50,
            100,
          ]
        }
        pageText="Page"
        pivotDefaults={Object {}}
        pivotIDKey="_pivotID"
        pivotValKey="_pivotVal"
        previousText="Previous"
        renderEmptyTable={[Function]}
        resizable={false}
        rowsText="rows"
        selectAll={false}
        showPageJump={true}
        showPageSizeOptions={true}
        showPagination={false}
        showPaginationBottom={true}
        showPaginationTop={false}
        sortable={false}
        style={Object {}}
        subRowsKey="_subRows"
      >
        <div
          className="ReactTable custom-demographics-table"
          style={Object {}}
        >
          <Table
            className=""
          >
            <div
              className="rt-table"
            >
              <Thead
                className="-header"
                style={
                  Object {
                    "minWidth": "380px",
                  }
                }
              >
                <div
                  className="rt-thead -header"
                  style={
                    Object {
                      "minWidth": "380px",
                    }
                  }
                >
                  <Tr>
                    <div
                      className="rt-tr"
                    >
                      <ThComponent
                        className=""
                        key="0-name"
                        style={
                          Object {
                            "flex": "180 0 auto",
                            "maxWidth": "180px",
                            "width": "180px",
                          }
                        }
                        toggleSort={[Function]}
                      >
                        <div
                          className="rt-th"
                          onClick={[Function]}
                          role="heading"
                          style={
                            Object {
                              "flex": "180 0 auto",
                              "maxWidth": "180px",
                              "width": "180px",
                            }
                          }
                        >
                          <div
                            className=""
                          >
                            Custom
                          </div>
                        </div>
                      </ThComponent>
                      <ThComponent
                        className=""
                        key="1-edit"
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": "100px",
                            "width": "100px",
                          }
                        }
                        toggleSort={[Function]}
                      >
                        <div
                          className="rt-th"
                          onClick={[Function]}
                          role="heading"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": "100px",
                              "width": "100px",
                            }
                          }
                        >
                          <div
                            className=""
                          />
                        </div>
                      </ThComponent>
                      <ThComponent
                        className=""
                        key="2-delete"
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": "100px",
                            "width": "100px",
                          }
                        }
                        toggleSort={[Function]}
                      >
                        <div
                          className="rt-th"
                          onClick={[Function]}
                          role="heading"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": "100px",
                              "width": "100px",
                            }
                          }
                        >
                          <div
                            className=""
                          />
                        </div>
                      </ThComponent>
                    </div>
                  </Tr>
                </div>
              </Thead>
              <Component
                className=""
                style={
                  Object {
                    "minWidth": "380px",
                  }
                }
              >
                <div
                  className="custom-demographics-table__no-data"
                >
                  <div
                    className="custom-demographics-table__no-data-text"
                  />
                </div>
              </Component>
            </div>
          </Table>
          <NoData>
            <div
              className="rt-noData"
            >
              No rows found
            </div>
          </NoData>
          <LoadingComponent
            loading={false}
            loadingText="Loading..."
          >
            <div
              className="-loading"
            >
              <div
                className="-loading-inner"
              >
                Loading...
              </div>
            </div>
          </LoadingComponent>
        </div>
      </ReactTable>
    </div>
  </SAMTable>
</CustomDemographicList>
`;

exports[`<CustomDemographicList /> should populate the Custom Demographics Table with the right columns 1`] = `
<span
  className="custom-demographic-list__table-link"
  onClick={[Function]}
  role="link"
  tabIndex={0}
>
  edit
</span>
`;

exports[`<CustomDemographicList /> should populate the Custom Demographics Table with the right columns 2`] = `
<span
  className="custom-demographic-list__table-link"
  onClick={[Function]}
  role="link"
  tabIndex={0}
>
  delete
</span>
`;
